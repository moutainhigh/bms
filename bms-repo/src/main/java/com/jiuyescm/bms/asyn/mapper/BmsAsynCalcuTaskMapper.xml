<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jiuyescm.bms.asyn.entity.BmsAsynCalcuTaskMapper" >
    <resultMap id="BaseResultMap" type="com.jiuyescm.bms.asyn.entity.BmsAsynCalcuTaskEntity" >
        <id column="id" property="id" jdbcType="BIGINT" />
	    <result column="id" property="id" jdbcType="BIGINT" />
	    <result column="task_id" property="taskId" jdbcType="VARCHAR" />
	    <result column="customer_id" property="customerId" jdbcType="VARCHAR" />
	    <result column="customer_name" property="customerName" jdbcType="VARCHAR" />
	    <result column="subject_code" property="subjectCode" jdbcType="VARCHAR" />
	    <result column="subject_name" property="subjectName" jdbcType="VARCHAR" />
	    <result column="fees_type" property="feesType" jdbcType="VARCHAR" />
	    <result column="cre_month" property="creMonth" jdbcType="INTEGER" />
	    <result column="task_status" property="taskStatus" jdbcType="TINYINT" />
	    <result column="fees_count" property="feesCount" jdbcType="INTEGER" />
	    <result column="uncalcu_count" property="uncalcuCount" jdbcType="INTEGER" />
	    <result column="calcu_count" property="calcuCount" jdbcType="INTEGER" />
	    <result column="begin_count" property="beginCount" jdbcType="INTEGER" />
	    <result column="finish_count" property="finishCount" jdbcType="INTEGER" />
	    <result column="sys_error_count" property="sysErrorCount" jdbcType="INTEGER" />
	    <result column="contract_miss_count" property="contractMissCount" jdbcType="INTEGER" />
	    <result column="quote_miss_count" property="quoteMissCount" jdbcType="INTEGER" />
	    <result column="no_exe_count" property="noExeCount" jdbcType="INTEGER" />
	    <result column="no_dinggou_count" property="noDinggouCount" jdbcType="INTEGER" />
	    <result column="task_rate" property="taskRate" jdbcType="INTEGER" />
	    <result column="cre_person" property="crePerson" jdbcType="VARCHAR" />
	    <result column="cre_person_id" property="crePersonId" jdbcType="VARCHAR" />
	    <result column="cre_time" property="creTime" jdbcType="TIMESTAMP" />
	    <result column="process_time" property="processTime" jdbcType="TIMESTAMP" />
	    <result column="finish_time" property="finishTime" jdbcType="TIMESTAMP" />
	    <result column="remark" property="remark" jdbcType="VARCHAR" />
	    <result column="total_amount" property="totalAmount" jdbcType="DECIMAL" />
    </resultMap>
  
    <sql id="baseColumns">
        id, task_id, customer_id,customer_name, subject_code,subject_name,fees_type, cre_month, task_status, fees_count, uncalcu_count, calcu_count, begin_count, finish_count, sys_error_count, contract_miss_count,no_dinggou_count, quote_miss_count, no_exe_count, task_rate, cre_person, cre_person_id, cre_time, process_time, finish_time,calcu_status,total_amount, remark
    </sql>
	
	<sql id="baseSelectColumns">
		<if test="(taskId != null and taskId !='')" >
				and task_id = #{taskId}
		</if>
		<if test="(customerId != null and customerId !='')" >
				and customer_id = #{customerId}
		</if>
		<if test="(subjectCode != null and subjectCode !='')" >
				and subject_code = #{subjectCode}
		</if>
		<if test="(creMonth != null)" >
				and cre_month = #{creMonth}
		</if>
		<if test="(taskStatus != null)" >
				and task_status = #{taskStatus}
		</if>
		<if test="(crePerson != null and crePerson !='')" >
				and cre_person = #{crePerson}
		</if>
		<if test="(crePersonId != null and crePersonId !='')" >
				and cre_person_id = #{crePersonId}
		</if>
		<if test="(creTime != null and creTime !='')" >
			    and cre_time >= #{creTime} and <![CDATA[cre_time <= #{creTime}]]>
		</if>
		<if test="(feesType != null and feesType !='')" >
				and fees_type = #{feesType}
		</if>
    </sql>
	  
    <select id="query" parameterType="java.util.Map"
        resultMap="BaseResultMap">
        select
        <include refid="baseColumns" />
        from bms_asyn_calcu_task
        where 1=1
		<include refid="baseSelectColumns" />
		<if test='processAlarm!=null and processAlarm!=""'>
		and  ((process_time-cre_time)&gt;#{processAlarm} or process_time is null)
		</if>
		<if test='finishAlarm!=null and finishAlarm!=""'>
		and  ((finish_time-cre_time)&gt;#{finishAlarm} or finish_time is null)
		</if>
		<if test="(queryCus != null and queryCus !='')" >
				group by customer_id
		</if>
    </select>
    
    
    
    <select id="queryOne" parameterType="java.lang.String"
        resultType="com.jiuyescm.bms.asyn.entity.BmsAsynCalcuTaskEntity">
        select
        <include refid="baseColumns" />
        from bms_asyn_calcu_task
        where 1=1 and task_id= #{taskId} limit 1
		
    </select>


    <insert id="save" parameterType="com.jiuyescm.bms.asyn.entity.BmsAsynCalcuTaskEntity">
        insert into bms_asyn_calcu_task
        (task_id, customer_id, customer_name,subject_code,subject_name, fees_type, cre_month, task_status, cre_person, cre_person_id, cre_time,remark)
        values (
			#{taskId,jdbcType=VARCHAR}, 
			#{customerId,jdbcType=VARCHAR}, 
			#{customerName,jdbcType=VARCHAR}, 
			#{subjectCode,jdbcType=VARCHAR},
			#{subjectName,jdbcType=VARCHAR}, 
			#{feesType,jdbcType=VARCHAR}, 
			#{creMonth,jdbcType=INTEGER}, 
			#{taskStatus,jdbcType=TINYINT}, 
			#{crePerson,jdbcType=VARCHAR}, 
			#{crePersonId,jdbcType=VARCHAR}, 
			#{creTime,jdbcType=TIMESTAMP},  
			#{remark,jdbcType=VARCHAR}
        )
    </insert>

    <update id="update" parameterType="com.jiuyescm.bms.asyn.entity.BmsAsynCalcuTaskEntity">
        update bms_asyn_calcu_task 
		<set >
			<if test="taskStatus != null" >task_status=#{taskStatus,jdbcType=TINYINT},</if>
			<if test="calcuStatus != null" >calcu_status=#{calcuStatus,jdbcType=TINYINT},</if>
			<if test="feesCount != null" >fees_count=#{feesCount,jdbcType=INTEGER},</if>
			<if test="uncalcuCount != null" >uncalcu_count=#{uncalcuCount,jdbcType=INTEGER},</if>
			<if test="calcuCount != null" >calcu_count=#{calcuCount,jdbcType=INTEGER},</if>
			<if test="beginCount != null" >begin_count=#{beginCount,jdbcType=INTEGER},</if>
			<if test="finishCount != null" >finish_count=#{finishCount,jdbcType=INTEGER},</if>
			<if test="sysErrorCount != null" >sys_error_count=#{sysErrorCount,jdbcType=INTEGER},</if>
			<if test="contractMissCount != null" >contract_miss_count=#{contractMissCount,jdbcType=INTEGER},</if>
			<if test="noDinggouCount != null" >no_dinggou_count=#{noDinggouCount,jdbcType=INTEGER},</if>
			<if test="quoteMissCount != null" >quote_miss_count=#{quoteMissCount,jdbcType=INTEGER},</if>
			<if test="noExeCount != null" >no_exe_count=#{noExeCount,jdbcType=INTEGER},</if>
			<if test="taskRate != null" >task_rate=#{taskRate,jdbcType=INTEGER},</if>
			<if test="processTime != null" >process_time=#{processTime,jdbcType=TIMESTAMP},</if>
			<if test="finishTime != null" >finish_time=#{finishTime,jdbcType=TIMESTAMP},</if>
			<if test="remark != null" >remark=#{remark,jdbcType=VARCHAR},</if>
			<if test="totalAmount != null" >total_amount=#{totalAmount,jdbcType=DECIMAL},</if>
		</set>
        where task_id=#{taskId}
    </update>
    
    <select id="queryUnfinish" parameterType="java.util.Map"
        resultType="com.jiuyescm.bms.asyn.entity.BmsAsynCalcuTaskEntity">
        select
        <include refid="baseColumns" />
        from bms_asyn_calcu_task
        where 1=1 and task_status in(0,10)
		<include refid="baseSelectColumns" />
    </select>
    
    <select id="queryByMap" parameterType="java.util.Map"
        resultType="com.jiuyescm.bms.asyn.entity.BmsAsynCalcuTaskEntity">
        select customer_id as customerId,subject_code as subjectCode, DATE_FORMAT(create_time,'%Y%m') as creMonth
		from fees_receive_storage 
   		where del_flag='0' and is_calculated=#{isCalculated}
    	<if test="(subjectList != null and subjectList!='')">
			and subject_code in
			<foreach collection="subjectList" index="index" item="item" open="(" separator="," close=")">
				#{item}
		    </foreach>
		</if>  	
		GROUP BY customer_id,subject_code,DATE_FORMAT(create_time,'%Y%m');  
    </select>
    
    <select id="queryDisByMap" parameterType="java.util.Map"
        resultType="com.jiuyescm.bms.asyn.entity.BmsAsynCalcuTaskEntity">
        select customerid as customerId,subject_code as subjectCode,DATE_FORMAT(create_time,'%Y%m') as creMonth
		from fees_receive_dispatch
		where is_calculated=#{isCalculated}
		and del_flag='0'
    	<if test="(subjectList != null and subjectList!='')">
			and subject_code in
			<foreach collection="subjectList" index="index" item="item" open="(" separator="," close=")">
				#{item}
		    </foreach>
		</if>  	
		GROUP BY customerid,subject_code,DATE_FORMAT(create_time,'%Y%m');  
    </select>
    
        <insert id="saveLog" parameterType="com.jiuyescm.bms.asyn.entity.BmsAsynCalcuTaskEntity">
        insert into bms_asyn_calcu_task_log
        (task_id, customer_id, customer_name,subject_code,subject_name, fees_type, cre_month, task_status, cre_person, cre_person_id, cre_time,remark)
        values (
			#{taskId,jdbcType=VARCHAR}, 
			#{customerId,jdbcType=VARCHAR}, 
			#{customerName,jdbcType=VARCHAR}, 
			#{subjectCode,jdbcType=VARCHAR},
			#{subjectName,jdbcType=VARCHAR}, 
			#{feesType,jdbcType=VARCHAR}, 
			#{creMonth,jdbcType=INTEGER}, 
			#{taskStatus,jdbcType=TINYINT}, 
			#{crePerson,jdbcType=VARCHAR}, 
			#{crePersonId,jdbcType=VARCHAR}, 
			#{creTime,jdbcType=TIMESTAMP},  
			#{remark,jdbcType=VARCHAR}
        )
    </insert>
    <select id="queryMain" parameterType="java.util.Map"
    	resultType="com.jiuyescm.bms.asyn.entity.BmsAsynCalcuTaskEntity">
    	select a.customer_id,a.customer_name,a.cre_month
		from bms_asyn_calcu_task a
		LEFT JOIN bms_user_customer_listener b on a.customer_id=b.customer_id and b.del_flag='0'
		where a.cre_month = #{creMonth}
		<if test="(customerId != null and customerId!='')">
			and a.customer_id = #{customerId}
		</if>	
		and b.cre_person_id=#{crePersonId}
		group by a.customer_id,a.customer_name
    </select>
    
     <select id="queryMainSe" parameterType="java.util.Map"
    	resultType="com.jiuyescm.bms.asyn.entity.BmsAsynCalcuTaskEntity">
    	select a.customer_id,a.customer_name,a.cre_month
		from bms_asyn_calcu_task a
		where a.cre_month = #{creMonth}
		<if test="(customerId != null and customerId!='')">
			and a.customer_id = #{customerId}
		</if>
		group by a.customer_id
    </select>
    
    <select id="queryMainSeCount" parameterType="java.util.Map"
    	resultType="int">
    	select count(1) from (
    	select 1
		from bms_asyn_calcu_task a
		where a.cre_month = #{creMonth}
		<if test="customerIds != null and customerIds!=''">
			and customer_id in
			<foreach collection="customerIds" index="index" item="item" open="(" separator="," close=")">
				#{item}
		    </foreach>
			</if>  
		group by a.customer_id ) aa
    </select>
    
    <select id="queryInfoByCustomerId" parameterType="java.util.Map"
    	resultType="com.jiuyescm.bms.asyn.entity.BmsAsynCalcuTaskEntity">
    	SELECT 
			    customer_id,
			    customer_name,
			    cre_month,
			    MAX(IF(calcu_status = 0, 3, calcu_status)) AS customerStatus,
			    COUNT(0) AS subjectNum
			FROM
			    bms_asyn_calcu_task
			WHERE
			    cre_month = #{creMonth}
			    <if test="(customerIds != null and customerIds!='')">
				and customer_id in
				<foreach collection="customerIds" index="index" item="item" open="(" separator="," close=")">
					#{item}
			    </foreach>
			</if>  
			GROUP BY customer_id
		<if test="customerStatus != null and customerStatus !='' and customerStatus != 'ALL' ">
			HAVING customerStatus=#{customerStatus}
		</if>
	
    </select>
    
    
    <select id="queryInfoByCustomerIdSe" parameterType="java.util.Map"
    	resultType="com.jiuyescm.bms.asyn.entity.BmsAsynCalcuTaskEntity">
    	SELECT 
			    customer_id,
			    customer_name,
			    cre_month,
			    MAX(IF(calcu_status = 0, 3, calcu_status)) AS customerStatus,
			    COUNT(0) AS subjectNum
			FROM
			    bms_asyn_calcu_task
			WHERE
			    cre_month = #{creMonth}
			 <if test="customerId != null and customerId!=''">
			 and customer_id=#{customerId}
			 </if>   
			<if test="customerIds != null and customerIds!=''">
			and customer_id in
			<foreach collection="customerIds" index="index" item="item" open="(" separator="," close=")">
				#{item}
		    </foreach>
			</if>  
			GROUP BY customer_id
		<if test="customerStatus != null and customerStatus !='' and customerStatus != 'ALL' ">
			HAVING customerStatus=#{customerStatus}
		</if>
	
    </select>
    
    <select id="queryDetail" parameterType="java.util.Map"
    	resultType="com.jiuyescm.bms.asyn.entity.BmsAsynCalcuTaskEntity">
    	select subject_code,subject_name,fees_type,customer_id,customer_name,cre_month,task_status,fees_count,
		finish_count,contract_miss_count,quote_miss_count,uncalcu_count,
		sys_error_count,no_exe_count,no_dinggou_count,
		case 
		when calcu_status = 0 then '3'
		when calcu_status = 1 then '1'
		when calcu_status = 2 then '2'
		end customerStatus 
		from bms_asyn_calcu_task 
		where cre_month = #{creMonth} 
		<if test="(customerId != null and customerId!='')">
			and customer_id = #{customerId}
		</if>
    </select>
    
        <update id="updateByTaskId" parameterType="com.jiuyescm.bms.asyn.entity.BmsAsynCalcuTaskEntity">
        update bms_asyn_calcu_task 
		<trim prefix="set" suffixOverrides="," >
			<if test="taskStatus != null" >task_status=#{taskStatus,jdbcType=TINYINT},</if>
			<if test="feesCount != null" >fees_count=#{feesCount,jdbcType=INTEGER},</if>
			<if test="uncalcuCount != null" >uncalcu_count=#{uncalcuCount,jdbcType=INTEGER},</if>
			<if test="calcuCount != null" >calcu_count=#{calcuCount,jdbcType=INTEGER},</if>
			<if test="beginCount != null" >begin_count=#{beginCount,jdbcType=INTEGER},</if>
			<if test="finishCount != null" >finish_count=#{finishCount,jdbcType=INTEGER},</if>
			<if test="sysErrorCount != null" >sys_error_count=#{sysErrorCount,jdbcType=INTEGER},</if>
			<if test="contractMissCount != null" >contract_miss_count=#{contractMissCount,jdbcType=INTEGER},</if>
			<if test="quoteMissCount != null" >quote_miss_count=#{quoteMissCount,jdbcType=INTEGER},</if>
			<if test="noExeCount != null" >no_exe_count=#{noExeCount,jdbcType=INTEGER},</if>
			<if test="taskRate != null" >task_rate=#{taskRate,jdbcType=INTEGER},</if>
			<if test="creTime != null" >cre_time=#{creTime,jdbcType=TIMESTAMP},</if>
			<if test="processTime != null" >process_time=#{processTime,jdbcType=TIMESTAMP},</if>
			<if test="finishTime != null" >finish_time=#{finishTime,jdbcType=TIMESTAMP},</if>
			<if test="remark != null" >remark=#{remark,jdbcType=VARCHAR},</if>
			<if test="newid != null" >task_id=#{newid,jdbcType=VARCHAR},</if>
			<if test="crePerson != null" >cre_person=#{crePerson,jdbcType=VARCHAR},</if>
			<if test="crePersonId != null" >cre_person_id=#{crePersonId,jdbcType=VARCHAR},</if>
			<if test="totalAmount != null" >total_amount=#{totalAmount,jdbcType=DECIMAL},</if>
			<if test="finTimeIsNull != null and finTimeIsNull!=''" >finish_time = null,</if>
			<if test="procTimeIsNull != null and procTimeIsNull!=''" >process_time = null,</if>
		</trim>
        where task_id=#{taskId}
    </update>
</mapper>