package com.jiuyescm.bms.biz.transport.entity;
import java.util.List;
import java.math.BigDecimal;
import com.jiuyescm.bms.common.entity.CalculateVo;
import com.jiuyescm.bms.biz.transport.entity.BizGanxianWayBillEntity;
import com.jiuyescm.bms.quotation.transport.entity.PriceTransportTemplateEntity;
import com.jiuyescm.bms.quotation.transport.entity.PriceTransportLineEntity;
import com.jiuyescm.bms.quotation.transport.entity.PriceTransportLineRangeEntity;
import function com.jiuyescm.common.utils.drools.Utility.helper;
import function com.jiuyescm.common.utils.drools.Utility.help;
import org.apache.commons.lang.StringUtils;

##########################################################################################################################################
rule "transportFee2carModel:1"
when
	$parent:CalculateVo();
	data : BizGanxianWayBillEntity((transportType=="TCZC" || transportType=="GXZC") && StringUtils.isNotEmpty(sendProvinceId) && StringUtils.isNotEmpty(sendCityId) && StringUtils.isNotEmpty(sendDistrictId) && StringUtils.isNotEmpty(receiverProvinceId) && StringUtils.isNotEmpty(receiverCityId) && StringUtils.isNotEmpty(receiverDistrictId)) from $parent.obj;
	$transportTemplate : PriceTransportTemplateEntity();
	$line : PriceTransportLineEntity(fromProvinceId==data.getSendProvinceId(),fromCityId==data.getSendCityId(),fromDistrictId==data.getSendDistrictId(),toProvinceId==data.getReceiverProvinceId(),toCityId==data.getReceiverCityId(),toDistrictId==data.getReceiverDistrictId()) from $transportTemplate.child
	$lineRange : PriceTransportLineRangeEntity(carModelCode==data.getCarModel()) from $line.child;	
then
	$parent.setPrice(new BigDecimal($lineRange.getUnitPrice())); 
	$parent.setUnitPrice($lineRange.getUnitPrice());
	help(drools, "规则transportFee2carModel:1按车型["+ data.getCarModel() +"]试算.");
end;

rule "transportFee2carModel:2"	
when
	$parent:CalculateVo();
	data : BizGanxianWayBillEntity((transportType=="TCZC" || transportType=="GXZC") && StringUtils.isNotEmpty(sendProvinceId) && StringUtils.isNotEmpty(sendCityId) && StringUtils.isNotEmpty(receiverProvinceId) && StringUtils.isNotEmpty(receiverCityId)) from $parent.obj;
	$transportTemplate : PriceTransportTemplateEntity();
	$line : PriceTransportLineEntity(fromProvinceId==data.getSendProvinceId(),fromCityId==data.getSendCityId(),fromDistrictId==data.getSendDistrictId(),toProvinceId==data.getReceiverProvinceId(),toCityId==data.getReceiverCityId(),toDistrictId==data.getReceiverDistrictId()) from $transportTemplate.child
	$lineRange : PriceTransportLineRangeEntity(carModelCode==data.getCarModel()) from $line.child;	
then
	$parent.setPrice(new BigDecimal($lineRange.getUnitPrice())); 
	$parent.setUnitPrice($lineRange.getUnitPrice());
	help(drools, "规则transportFee2carModel:2按车型["+ data.getCarModel() +"]试算.");
end;

##########################################################################################################################################
rule "transportFee2Volumn:1"	
when
	$parent:CalculateVo();
	data : BizGanxianWayBillEntity(isLight=="Y" && StringUtils.isNotEmpty(sendProvinceId) && StringUtils.isNotEmpty(sendCityId) && StringUtils.isNotEmpty(sendDistrictId) && StringUtils.isNotEmpty(receiverProvinceId) && StringUtils.isNotEmpty(receiverCityId) && StringUtils.isNotEmpty(receiverDistrictId)) from $parent.obj;
	$transportTemplate : PriceTransportTemplateEntity();
	$line : PriceTransportLineEntity(fromProvinceId==data.getSendProvinceId(),fromCityId==data.getSendCityId(),fromDistrictId==data.getSendDistrictId(),toProvinceId==data.getReceiverProvinceId(),toCityId==data.getReceiverCityId(),toDistrictId==data.getReceiverDistrictId()) from $transportTemplate.child
	$lineRange : PriceTransportLineRangeEntity(data.getTotalVolume()>=volumeLowerLimit && data.getTotalVolume()<=volumeUpperLimit) from $line.child;	
then
	$parent.setPrice(multiCal($lineRange.getUnitPrice(), data.getTotalVolume()));
	$parent.setUnitPrice($lineRange.getUnitPrice());
	help(drools, "规则transportFee2Volumn:1按体积[isLight="+ data.getIsLight() +"]试算.");
end;


rule "transportFee2Volumn:2"	
when
	$parent:CalculateVo();
	data : BizGanxianWayBillEntity(isLight=="Y" && StringUtils.isNotEmpty(sendProvinceId) && StringUtils.isNotEmpty(sendCityId) && StringUtils.isNotEmpty(receiverProvinceId) && StringUtils.isNotEmpty(receiverCityId)) from $parent.obj;
	$transportTemplate : PriceTransportTemplateEntity();
	$line : PriceTransportLineEntity(fromProvinceId==data.getSendProvinceId(),fromCityId==data.getSendCityId(),fromDistrictId==data.getSendDistrictId(),toProvinceId==data.getReceiverProvinceId(),toCityId==data.getReceiverCityId(),toDistrictId==data.getReceiverDistrictId()) from $transportTemplate.child
	$lineRange : PriceTransportLineRangeEntity(data.getTotalVolume()>=volumeLowerLimit && data.getTotalVolume()<=volumeUpperLimit) from $line.child;	
then
	$parent.setPrice(multiCal($lineRange.getUnitPrice(), data.getTotalVolume()));
	$parent.setUnitPrice($lineRange.getUnitPrice());
	help(drools, "规则transportFee2Volumn:2按体积[isLight="+ data.getIsLight() +"]试算.");
end;

##########################################################################################################################################

rule "transportFee2weight:1"	
when
	$parent:CalculateVo();
	data : BizGanxianWayBillEntity(isLight=="N" && StringUtils.isNotEmpty(sendProvinceId) && StringUtils.isNotEmpty(sendCityId) && StringUtils.isNotEmpty(sendDistrictId) && StringUtils.isNotEmpty(receiverProvinceId) && StringUtils.isNotEmpty(receiverCityId) && StringUtils.isNotEmpty(receiverDistrictId)) from $parent.obj;
	$transportTemplate : PriceTransportTemplateEntity();
	$line : PriceTransportLineEntity(fromProvinceId==data.getSendProvinceId(),fromCityId==data.getSendCityId(),fromDistrictId==data.getSendDistrictId(),toProvinceId==data.getReceiverProvinceId(),toCityId==data.getReceiverCityId(),toDistrictId==data.getReceiverDistrictId()) from $transportTemplate.child
	$lineRange : PriceTransportLineRangeEntity(add(data.getTotalWeight(), data.getAdjustWeight())>=weightLowerLimit && add(data.getTotalWeight(), data.getAdjustWeight())<=weightUpperLimit && add(data.getTotalWeight(), data.getAdjustWeight())> minWeightShipment) from $line.child;	
then
	$parent.setPrice(multiCal($lineRange.getUnitPrice(), add(data.getTotalWeight(), data.getAdjustWeight()) ));
	$parent.setUnitPrice($lineRange.getUnitPrice());
	help(drools, "规则transportFee2weight:1按重量[isLight="+ data.getIsLight() +"]试算,超过最低起运量.");
end;

rule "transportFee2weight:2"	
when
	$parent:CalculateVo();
	data : BizGanxianWayBillEntity(isLight=="N" && StringUtils.isNotEmpty(sendProvinceId) && StringUtils.isNotEmpty(sendCityId) && StringUtils.isNotEmpty(sendDistrictId) && StringUtils.isNotEmpty(receiverProvinceId) && StringUtils.isNotEmpty(receiverCityId) && StringUtils.isNotEmpty(receiverDistrictId)) from $parent.obj;
	$transportTemplate : PriceTransportTemplateEntity();
	$line : PriceTransportLineEntity(fromProvinceId==data.getSendProvinceId(),fromCityId==data.getSendCityId(),fromDistrictId==data.getSendDistrictId(),toProvinceId==data.getReceiverProvinceId(),toCityId==data.getReceiverCityId(),toDistrictId==data.getReceiverDistrictId()) from $transportTemplate.child
	$lineRange : PriceTransportLineRangeEntity(add(data.getTotalWeight(), data.getAdjustWeight())>=weightLowerLimit && add(data.getTotalWeight(), data.getAdjustWeight())<=weightUpperLimit && add(data.getTotalWeight(), data.getAdjustWeight())<= minWeightShipment) from $line.child;
then
	$parent.setPrice(multiCal($lineRange.getUnitPrice(), $lineRange.getMinWeightShipment()));
	$parent.setUnitPrice($lineRange.getUnitPrice());
	help(drools, "规则transportFee2weight:2按重量[isLight="+ data.getIsLight() +"]试算,按最低起运量计算.");
end;


function BigDecimal multiCal(Double v1, Double v2){ 
	return new BigDecimal(v1 * v2).setScale(2, BigDecimal.ROUND_HALF_UP);
}
function double add(double v1, double v2) {  
    BigDecimal b1 = new BigDecimal(Double.toString(v1));  
    BigDecimal b2 = new BigDecimal(Double.toString(v2));  
    return b1.add(b2).doubleValue();  
}
