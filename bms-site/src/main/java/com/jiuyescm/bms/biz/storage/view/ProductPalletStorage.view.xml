<?xml version="1.0" encoding="UTF-8"?>
<ViewConfig>
  <Arguments/>
  <Context/>
  <Model>
    <DataType name="dataTypeProductPalletStorage">
      <Property name="creationType">com.jiuyescm.bms.biz.storage.entity.BizProductPalletStorageEntity</Property>
      <PropertyDef name="id">
        <Property name="dataType">Long</Property>
        <Property name="label">id</Property>
      </PropertyDef>
      <PropertyDef name="dataNum">
        <Property></Property>
        <Property name="label">数据编号</Property>
      </PropertyDef>
      <PropertyDef name="warehouseCode">
        <Property></Property>
        <Property name="label">仓库</Property>
        <Property name="mapping">
          <Property name="mapValues">${dorado.getDataProvider(&quot;dispatchPR#getPubWareHouse&quot;).getResult()}</Property>
        </Property>
      </PropertyDef>
      <PropertyDef name="customerId">
        <Property></Property>
        <Property name="label">商家</Property>
        <Property name="mapping">
          <Property name="mapValues">${dorado.getDataProvider(&quot;productPalletStorageController#getCustomerMap&quot;).getResult()}</Property>
        </Property>
      </PropertyDef>
      <PropertyDef name="temperatureTypeCode">
        <Property></Property>
        <Property name="label">温度类型</Property>
        <Property name="mapping">
          <Property name="mapValues">${dorado.getDataProvider(&quot;selFromTablePR#getTemperatureTypeList&quot;).getResult()}</Property>
        </Property>
      </PropertyDef>
      <PropertyDef name="palletNum">
        <Property name="dataType">Double</Property>
        <Property name="label">托数</Property>
      </PropertyDef>
      <PropertyDef name="feesNo">
        <Property></Property>
        <Property name="label">费用编号</Property>
      </PropertyDef>
      <PropertyDef name="isCalculated">
        <Property></Property>
        <Property name="label">状态</Property>
        <Property name="mapping">
          <Property name="mapValues">${dorado.getDataProvider(&quot;bmsDictionaryEnum#getCalculateStateEnum&quot;).getResult()}</Property>
        </Property>
      </PropertyDef>
      <PropertyDef name="remark">
        <Property></Property>
        <Property name="label">备注</Property>
      </PropertyDef>
      <PropertyDef name="creator">
        <Property></Property>
        <Property name="label">创建者</Property>
      </PropertyDef>
      <PropertyDef name="createTime">
        <Property name="dataType">DateTime</Property>
        <Property name="label">创建时间</Property>
      </PropertyDef>
      <PropertyDef name="lastModifier">
        <Property></Property>
        <Property name="label">最后修改者</Property>
      </PropertyDef>
      <PropertyDef name="lastModifyTime">
        <Property name="label">最后修改时间</Property>
      </PropertyDef>
      <PropertyDef name="delFlag">
        <Property></Property>
        <Property name="label">删除标志</Property>
        <Property name="defaultValue">0</Property>
      </PropertyDef>
      <PropertyDef name="stockTime">
        <Property name="label">库存日期</Property>
        <Property name="dataType">DateTime</Property>
      </PropertyDef>
      <PropertyDef name="startTime">
        <Property name="label">库存日期</Property>
        <Property name="dataType">DateTime</Property>
      </PropertyDef>
      <PropertyDef name="endTime">
        <Property name="label">——</Property>
        <Property name="dataType">DateTime</Property>
      </PropertyDef>
      <PropertyDef name="num">
        <Property name="label">数量</Property>
      </PropertyDef>
      <PropertyDef name="extattr1">
        <Property></Property>
        <Property name="mapping">
          <Property name="mapValues">${dorado.getDataProvider(&quot;bmsDictionaryEnum#getDataStateEnum&quot;).getResult()}</Property>
        </Property>
        <Property name="label">数据类型</Property>
      </PropertyDef>
      <PropertyDef name="adjustPalletNum">
        <Property name="label">调整托数</Property>
      </PropertyDef>
    </DataType>
    <DataType name="dataTypeCondition">
      <PropertyDef name="dataNum">
        <Property></Property>
        <Property name="label">数据编号:</Property>
      </PropertyDef>
      <PropertyDef name="warehouseCode">
        <Property></Property>
        <Property name="label">仓库:</Property>
        <Property name="mapping">
          <Property name="mapValues">${dorado.getDataProvider(&quot;selFromTablePR#getJyWarehouse&quot;).getResult()}</Property>
        </Property>
      </PropertyDef>
      <PropertyDef name="customerId">
        <Property></Property>
        <Property name="label">商家:</Property>
      </PropertyDef>
      <PropertyDef name="isCalculated">
        <Property></Property>
        <Property name="label">状态:</Property>
        <Property name="mapping">
          <Property name="mapValues">${dorado.getDataProvider(&quot;bmsDictionaryEnum#getCalculateStateEnum&quot;).getResult()}</Property>
        </Property>
      </PropertyDef>
      <PropertyDef name="startTime">
        <Property name="label">库存日期:</Property>
        <Property name="dataType">DateTime</Property>
      </PropertyDef>
      <PropertyDef name="endTime">
        <Property name="label">——</Property>
        <Property name="dataType">DateTime</Property>
      </PropertyDef>
      <PropertyDef name="delFlag">
        <Property></Property>
        <Property name="label">删除标志:</Property>
        <Property name="defaultValue">0</Property>
      </PropertyDef>
      <PropertyDef name="extattr1">
        <Property></Property>
        <Property name="mapping">
          <Property name="mapValues">${dorado.getDataProvider(&quot;bmsDictionaryEnum#getDataStateEnum&quot;).getResult()}</Property>
        </Property>
        <Property name="label">数据类型</Property>
      </PropertyDef>
      <PropertyDef name="feesNo">
        <Property></Property>
        <Property name="label">费用编号</Property>
      </PropertyDef>
    </DataType>
    <DataType name="dtErrorMessageVo">
      <Property name="creationType">com.jiuyescm.bms.common.entity.ErrorMessageVo</Property>
      <PropertyDef name="lineNo">
        <Property name="dataType">int</Property>
        <Property name="label">行号</Property>
      </PropertyDef>
      <PropertyDef name="msg">
        <Property></Property>
        <Property name="label">消息</Property>
      </PropertyDef>
    </DataType>
    <DataType name="dtFileExportTaskEntity">
      <Property name="creationType">com.jiuyescm.bms.base.file.entity.FileExportTaskEntity</Property>
      <PropertyDef name="taskId">
        <Property></Property>
      </PropertyDef>
      <PropertyDef name="taskName">
        <Property></Property>
        <Property name="label">任务名称</Property>
      </PropertyDef>
      <PropertyDef name="billNo">
        <Property></Property>
        <Property name="label">账单编号</Property>
      </PropertyDef>
      <PropertyDef name="customerid">
        <Property></Property>
        <Property name="label">商家ID</Property>
      </PropertyDef>
      <PropertyDef name="taskType">
        <Property></Property>
      </PropertyDef>
      <PropertyDef name="taskState">
        <Property></Property>
        <Property name="label">状态</Property>
        <Property name="mapping">
          <Property name="mapValues">
            <Collection>
              <Entity>
                <Property name="key">0</Property>
                <Property name="value">已创建</Property>
              </Entity>
              <Entity>
                <Property name="key">1</Property>
                <Property name="value">处理中</Property>
              </Entity>
              <Entity>
                <Property name="key">2</Property>
                <Property name="value">成功</Property>
              </Entity>
              <Entity>
                <Property name="key">3</Property>
                <Property name="value">失败</Property>
              </Entity>
            </Collection>
          </Property>
        </Property>
      </PropertyDef>
      <PropertyDef name="progress">
        <Property name="dataType">Double</Property>
        <Property name="label">进度</Property>
      </PropertyDef>
      <PropertyDef name="filePath">
        <Property></Property>
      </PropertyDef>
      <PropertyDef name="param1">
        <Property></Property>
      </PropertyDef>
      <PropertyDef name="param2">
        <Property></Property>
      </PropertyDef>
      <PropertyDef name="param3">
        <Property></Property>
      </PropertyDef>
      <PropertyDef name="param4">
        <Property></Property>
      </PropertyDef>
      <PropertyDef name="param5">
        <Property></Property>
      </PropertyDef>
      <PropertyDef name="creator">
        <Property></Property>
        <Property name="label">创建人</Property>
      </PropertyDef>
      <PropertyDef name="delFlag">
        <Property></Property>
      </PropertyDef>
      <PropertyDef name="startTime">
        <Property name="label">开始时间</Property>
        <Property name="dataType">DateTime</Property>
      </PropertyDef>
      <PropertyDef name="endTime">
        <Property name="label">结束时间</Property>
        <Property name="dataType">DateTime</Property>
      </PropertyDef>
      <PropertyDef name="createTime">
        <Property name="label">创建时间</Property>
        <Property name="dataType">DateTime</Property>
      </PropertyDef>
    </DataType>
    <DataType name="dtFileExportTaskCondition">
      <PropertyDef name="taskName">
        <Property></Property>
        <Property name="label">任务名称</Property>
      </PropertyDef>
      <PropertyDef name="taskType">
        <Property></Property>
      </PropertyDef>
    </DataType>
  </Model>
  <View>
    <DataSet id="dataSetProductPalletStorage">
      <ClientEvent name="onReady">var palletStorageDataSet = view.get(&quot;#dataSetProductPalletStorage&quot;);&#xD;
palletStorageDataSet.set(&quot;parameter&quot;,{&#xD;
	delFlag: &quot;0&quot;&#xD;
});</ClientEvent>
      <Property name="dataType">[dataTypeProductPalletStorage]</Property>
      <Property name="dataProvider">productPalletStorageController#query</Property>
      <Property name="pageSize">20</Property>
      <Property name="loadMode">manual</Property>
      <Property name="parameter"></Property>
    </DataSet>
    <DataSet id="dataSetCondition">
      <ClientEvent name="onCreate">//如果不加这句话,Form查询框就是灰色的.&#xD;
view.get(&quot;#dataSetCondition&quot;).getData().insert();&#xD;
</ClientEvent>
      <Property name="dataType">[dataTypeCondition]</Property>
    </DataSet>
    <DataSet id="dsErrorMessageVo">
      <Property name="dataType">[dtErrorMessageVo]</Property>
    </DataSet>
    <DataSet id="dsGroupList">
      <Property name="dataProvider">productPalletStorageController#queryGroup</Property>
      <Property name="dataType">[dataTypeProductPalletStorage]</Property>
      <Property name="loadMode">manual</Property>
      <Property name="pageSize">20</Property>
    </DataSet>
    <DataSet id="dsQuotaDetele">
      <Property name="dataProvider">productPalletStorageController#queryDelete</Property>
      <Property name="loadMode">manual</Property>
      <Property name="pageSize">20</Property>
    </DataSet>
    <DataSet id="dsFileExportTaskList">
      <Property name="dataType">[dtFileExportTaskEntity]</Property>
      <Property name="pageSize">20</Property>
      <Property name="loadMode">manual</Property>
      <Property name="dataProvider">fileExportTaskController#query</Property>
    </DataSet>
    <DataSet id="dsFileExportTaskCondition">
      <ClientEvent name="onCreate">view.get(&quot;#dsFileExportTaskCondition&quot;).getData().insert();</ClientEvent>
      <Property name="dataType">[dtFileExportTaskCondition]</Property>
    </DataSet>
    <ToolBar>
      <DataPilot>
        <Property name="dataSet">dataSetProductPalletStorage</Property>
        <Property name="itemCodes">pages,pageSize</Property>
      </DataPilot>
      <ToolBarButton id="btnQuery">
        <ClientEvent name="onClick">var palletStorageDataSet=view.get(&quot;#dataSetProductPalletStorage&quot;);&#xD;
var queryForm=view.get(&quot;#queryFormProductPalletStorage&quot;);&#xD;
var data = view.get(&quot;#dataSetCondition.data&quot;).current;&#xD;
if(data.get(&quot;startTime&quot;)==&quot;&quot;||data.get(&quot;startTime&quot;)==null){&#xD;
		dorado.MessageBox.alert(&quot;创建时间不能为空!&quot;);&#xD;
		return;&#xD;
	}&#xD;
	if(data.get(&quot;endTime&quot;)==&quot;&quot;||data.get(&quot;endTime&quot;)==null){&#xD;
		dorado.MessageBox.alert(&quot;结束时间不能为空!&quot;);&#xD;
		return;&#xD;
	}&#xD;
	&#xD;
	if(data.get(&quot;startTime&quot;)>data.get(&quot;endTime&quot;)){&#xD;
		dorado.MessageBox.alert(&quot;开始时间不能大于结束时间!&quot;);&#xD;
		return;&#xD;
	} &#xD;
queryForm.get(&quot;entity&quot;).set(&quot;delFlag&quot;,&quot;0&quot;);&#xD;
palletStorageDataSet.set(&quot;parameter&quot;, queryForm.get(&quot;entity&quot;)).flushAsync();</ClientEvent>
        <Property name="caption">查询</Property>
        <Property name="icon">url(>skin>common/icons.gif) -20px -40px</Property>
      </ToolBarButton>
      <Separator/>
      <ToolBarButton id="btnNew">
        <ClientEvent name="onClick">//Template中插入一条空行,如果取消时记得同时取消&#xD;
var datas = view.get(&quot;#dataSetProductPalletStorage.data&quot;);&#xD;
datas.insert();&#xD;
&#xD;
//打开运输模板新增编辑窗口时,设置里面的Form中的默认值&#xD;
var editTemplateFormEntity = view.get(&quot;#editFormProductPalletStorage.entity&quot;);&#xD;
editTemplateFormEntity.set(&quot;isCalculated&quot;,&quot;0&quot;);&#xD;
&#xD;
&#xD;
//然后弹出新增编辑窗口&#xD;
view.get(&quot;#editDialogProductPalletStorage&quot;).show();</ClientEvent>
        <Property name="caption">新增</Property>
        <Property name="icon">url(>skin>common/icons.gif) -60px -120px</Property>
      </ToolBarButton>
      <ToolBarButton id="btnModify">
        <ClientEvent name="onClick">var data=view.get(&quot;#dataSetProductPalletStorage.data&quot;);&#xD;
if(data.current){&#xD;
	//然后弹出编辑窗口&#xD;
	view.get(&quot;#editDialogProductPalletStorage&quot;).show();&#xD;
}else{&#xD;
	dorado.MessageBox.alert(&quot;请先选择需要修改的记录!&quot;);&#xD;
}&#xD;
</ClientEvent>
        <Property name="icon">url(>skin>common/icons.gif) -100px -120px</Property>
        <Property name="caption">修改</Property>
      </ToolBarButton>
      <Separator/>
      <ToolBarButton id="btnTemplateDownload">
        <ClientEvent name="onClick">view.get(&quot;#downloadTemplateAction&quot;).execute();	&#xD;
&#xD;
</ClientEvent>
        <Property name="caption">模板下载</Property>
        <Property name="icon">url(>skin>common/icons.gif) -160px -120px</Property>
      </ToolBarButton>
      <ToolBarButton id="btnTemplateImport">
        <ClientEvent name="onClick">view.get(&quot;#ImportPalletDialog&quot;).show();&#xD;
</ClientEvent>
        <Property name="icon">url(>skin>common/icons.gif) -140px -120px</Property>
        <Property name="caption">导入模板</Property>
      </ToolBarButton>
      <Separator/>
      <ToolBarButton id="queryGroup">
        <ClientEvent name="onClick">var data = view.get(&quot;#dataSetCondition.data&quot;).current;&#xD;
    if(data.get(&quot;startTime&quot;)==&quot;&quot;||data.get(&quot;startTime&quot;)==null){&#xD;
		dorado.MessageBox.alert(&quot;库存日期开始时间不能为空!&quot;);&#xD;
		return;&#xD;
	}&#xD;
	if(data.get(&quot;endTime&quot;)==&quot;&quot;||data.get(&quot;endTime&quot;)==null){&#xD;
		dorado.MessageBox.alert(&quot;库存日期结束时间不能为空!&quot;);&#xD;
		return;&#xD;
	}&#xD;
	&#xD;
	if(data.get(&quot;startTime&quot;)>data.get(&quot;endTime&quot;)){&#xD;
		dorado.MessageBox.alert(&quot;库存日期开始时间不能大于结束时间!&quot;);&#xD;
		return;&#xD;
	}            &#xD;
with (view.get(&quot;#dsGroupList&quot;)){&#xD;
					set(&quot;parameter&quot;, data);&#xD;
					flushAsync();&#xD;
				}			&#xD;
				&#xD;
&#xD;
view.get(&quot;#panelCustomer3&quot;).show();&#xD;
</ClientEvent>
        <Property name="caption">分组统计</Property>
        <Property name="icon">url(>skin>common/icons.gif) -240px -40px</Property>
      </ToolBarButton>
      <Separator/>
      <ToolBarButton id="btnUpdateCalculate">
        <ClientEvent name="onClick">var validRetryAction = view.get(&quot;#validRetryAction&quot;);&#xD;
var retryAction = view.get(&quot;#RetryAction&quot;);&#xD;
var datas = view.get(&quot;#dataSetCondition.data&quot;).current;&#xD;
if(datas.get(&quot;customerId&quot;)==&quot;&quot;||datas.get(&quot;customerId&quot;)==null)&#xD;
{&#xD;
	dorado.MessageBox.alert(&quot;商家不能为空!&quot;);&#xD;
	return;&#xD;
}&#xD;
validRetryAction.set(&quot;parameter&quot;,datas);&#xD;
retryAction.set(&quot;parameter&quot;,datas);&#xD;
validRetryAction.execute(function(retMap){&#xD;
		if(retMap.key == &quot;Billed&quot;){&#xD;
			dorado.MessageBox.alert(retMap.value);&#xD;
			return;&#xD;
		}&#xD;
		if(retMap.key == &quot;Error&quot;){&#xD;
			dorado.MessageBox.alert(retMap.value);&#xD;
			return;&#xD;
		}&#xD;
		if(retMap.key == &quot;Calculated&quot; || retMap.key == &quot;OK&quot;){&#xD;
			dorado.MessageBox.confirm(retMap.value+&quot; 是否确定重算?&quot;,function(){&#xD;
				retryAction.execute(function(result){&#xD;
					dorado.MessageBox.alert(result);&#xD;
					with (view.get(&quot;#dataSetProductPalletStorage&quot;)){&#xD;
						flushAsync();&#xD;
					}&#xD;
				});&#xD;
			});&#xD;
			return;&#xD;
		}&#xD;
});&#xD;
</ClientEvent>
        <Property name="caption">重算</Property>
        <Property name="icon">url(>skin>common/icons.gif) -280px -220px</Property>
        <Property name="visible">true</Property>
      </ToolBarButton>
      <Separator/>
      <ToolBarButton id="btnSelectDelete">
        <ClientEvent name="onClick">//选中的记录&#xD;
var selectData = view.get(&quot;#dataGridProductPalletStorage&quot;).get(&quot;selection&quot;);&#xD;
&#xD;
if(selectData.length&lt;1){&#xD;
	dorado.MessageBox.alert(&quot;请首先选择需要删除的数据!&quot;);&#xD;
	return;&#xD;
}&#xD;
&#xD;
dorado.MessageBox.confirm(&quot;是否确定删除?&quot;,function(){&#xD;
	view.get(&quot;#updateActionDelete&quot;).execute(function(result){&#xD;
		if(result!='sucess'){&#xD;
			var returnData=&quot;&quot;;&#xD;
			var re=result.split(&quot;,&quot;);&#xD;
			re.each(function(item){&#xD;
				returnData+=&quot;费用编号&quot;+item+&quot;已过账，无法删除&quot;+&quot;\n&quot;;&#xD;
			});&#xD;
			dorado.MessageBox.alert(returnData);&#xD;
			return;&#xD;
		}&#xD;
		var data = view.get(&quot;#dataSetCondition.data&quot;).current;&#xD;
		with (view.get(&quot;#dataSetProductPalletStorage&quot;)){&#xD;
			set(&quot;parameter&quot;, data);&#xD;
			flushAsync();&#xD;
		}&#xD;
	});&#xD;
});&#xD;
</ClientEvent>
        <Property name="caption">选择删除</Property>
        <Property name="icon">url(>skin>common/icons.gif) -80px -120px</Property>
      </ToolBarButton>
      <Separator/>
      <ToolBarButton id="export">
        <ClientEvent name="onClick">var condition=view.get(&quot;#queryFormProductPalletStorage.entity&quot;);&#xD;
var customerId=condition.get(&quot;customerId&quot;);&#xD;
var cre=condition.get(&quot;startTime&quot;);&#xD;
var end=condition.get(&quot;endTime&quot;);&#xD;
if(isNullOrEmpty(customerId)){&#xD;
	dorado.MessageBox.alert(&quot;商家不能为空!&quot;);&#xD;
	return;&#xD;
}&#xD;
if(isNullOrEmpty(cre)){&#xD;
	dorado.MessageBox.alert(&quot;开始时间不能为空!&quot;);&#xD;
	return;&#xD;
}&#xD;
if(isNullOrEmpty(end)){&#xD;
	dorado.MessageBox.alert(&quot;结束时间不能为空!&quot;);&#xD;
	return;&#xD;
}&#xD;
if(!isNullOrEmpty(cre) &amp;&amp; !isNullOrEmpty(end)){&#xD;
 	if(cre.getTime()>end.getTime()){&#xD;
		dorado.MessageBox.alert(&quot;起始时间不能大于结束时间！&quot;);&#xD;
		return;&#xD;
	}&#xD;
}&#xD;
view.get(&quot;#bizDownAction&quot;).set(&quot;parameter&quot;,condition).execute(&#xD;
	function(result){&#xD;
		dorado.MessageBox.alert(result);&#xD;
	}&#xD;
);</ClientEvent>
        <Property name="caption">导出</Property>
        <Property name="icon">url(>skin>common/icons.gif) -180px -120px</Property>
      </ToolBarButton>
      <Separator/>
      <ToolBarButton id="biz_download">
        <ClientEvent name="onClick">with (view.get(&quot;#dsFileExportTaskList&quot;)){&#xD;
	//定义查询条件json结构&#xD;
	var queryJson={&#xD;
		taskType:'pro_pallet'&#xD;
	};&#xD;
	set(&quot;parameter&quot;, queryJson);&#xD;
	flushAsync();&#xD;
}&#xD;
view.get(&quot;#fileExportTaskDialog&quot;).show();</ClientEvent>
        <Property name="caption">数据下载</Property>
        <Property name="icon">url(>skin>common/icons.gif) -160px -120px</Property>
      </ToolBarButton>
      <Separator/>
      <ToolBarButton id="btnTemplateUpdate">
        <ClientEvent name="onClick">view.get(&quot;#updatePalletBillDialog&quot;).show();</ClientEvent>
        <Property name="caption">批量修改</Property>
        <Property name="icon">url(>skin>common/icons.gif) -100px -120px</Property>
      </ToolBarButton>
    </ToolBar>
    <AutoForm id="queryFormProductPalletStorage">
      <ClientEvent name="onReady">&#xD;
var nowdays = new Date();&#xD;
    var year = nowdays.getFullYear();&#xD;
    var month = nowdays.getMonth();&#xD;
    if(month==0)&#xD;
    {&#xD;
        month=12;&#xD;
        year=year-1;&#xD;
    }&#xD;
    if (month &lt; 10) {&#xD;
        month = &quot;0&quot; + month;&#xD;
    }&#xD;
    var firstDay = year + &quot;-&quot; + month + &quot;-&quot; + &quot;01 00:00:00&quot;;//上个月的第一天&#xD;
    var myDate = new Date(year, month, 0);&#xD;
    var lastDay = year + &quot;-&quot; + month + &quot;-&quot; + myDate.getDate()+&quot; 23:59:59&quot;;//上个月的最后一天&#xD;
	view.get(&quot;#queryFormProductPalletStorage.entity&quot;).set({&#xD;
		startTime:firstDay,&#xD;
		endTime:lastDay&#xD;
	});&#xD;
</ClientEvent>
      <Property name="cols">*,*,*</Property>
      <Property name="dataType">dataTypeCondition</Property>
      <Property name="dataSet">dataSetCondition</Property>
      <Property name="labelWidth">100</Property>
      <AutoFormElement>
        <Property name="name">dataNum</Property>
        <Property name="property">dataNum</Property>
        <Editor/>
      </AutoFormElement>
      <AutoFormElement>
        <Property name="name">warehouseCode</Property>
        <Property name="property">warehouseCode</Property>
        <Editor/>
      </AutoFormElement>
      <AutoFormElement>
        <Property name="name">customerId</Property>
        <Property name="property">customerId</Property>
        <Property name="trigger">triggerCus</Property>
        <Editor/>
      </AutoFormElement>
      <AutoFormElement>
        <Property name="name">isCalculated</Property>
        <Property name="property">isCalculated</Property>
        <Editor/>
      </AutoFormElement>
      <AutoFormElement>
        <Property name="name">startTime</Property>
        <Property name="property">startTime</Property>
        <Editor/>
      </AutoFormElement>
      <AutoFormElement>
        <Property name="name">endTime</Property>
        <Property name="property">endTime</Property>
        <Editor/>
      </AutoFormElement>
      <AutoFormElement>
        <Property name="name">delFlag</Property>
        <Property name="property">delFlag</Property>
        <Property name="hideMode">display</Property>
        <Property name="visible">false</Property>
        <Editor/>
      </AutoFormElement>
      <AutoFormElement>
        <Property name="name">extattr1</Property>
        <Property name="property">extattr1</Property>
        <Editor/>
      </AutoFormElement>
      <AutoFormElement>
        <Property name="name">feesNo</Property>
        <Property name="property">feesNo</Property>
        <Editor/>
      </AutoFormElement>
    </AutoForm>
    <DataGrid id="dataGridProductPalletStorage">
      <ClientEvent name="onDataRowClick">/*&#xD;
var data = view.get(&quot;#dataSetTransportTemplate.data&quot;);&#xD;
var templateId=data.current.get(&quot;id&quot;);&#xD;
&#xD;
with (view.get(&quot;#dataSetTransportLine&quot;)){&#xD;
	//定义查询条件json结构&#xD;
	var queryJson={&#xD;
		templateId:templateId,&#xD;
		delFlag:&quot;0&quot;&#xD;
	};&#xD;
	set(&quot;parameter&quot;, queryJson);&#xD;
	flushAsync();&#xD;
}&#xD;
*/&#xD;
&#xD;
</ClientEvent>
      <ClientEvent name="onDataRowDoubleClick">/*&#xD;
var data=view.get(&quot;#dataSetTransportTemplate.data&quot;);&#xD;
if(data.current){&#xD;
	var en = view.get(&quot;#queryTransportTemplateForm.entity&quot;);&#xD;
	en.set(&quot;templateTypeCode&quot;,&quot;TRANSPORT_FEE&quot;);&#xD;
	view.get(&quot;#editTransportTemplateDialog&quot;).show();&#xD;
}else{&#xD;
	dorado.MessageBox.alert(&quot;请选择需要修改的记录!&quot;);&#xD;
}&#xD;
*/</ClientEvent>
      <Property name="dataSet">dataSetProductPalletStorage</Property>
      <Property name="readOnly">true</Property>
      <Property name="showFilterBar">false</Property>
      <Property name="selectionMode">multiRows</Property>
      <IndicatorColumn/>
      <RowNumColumn/>
      <RowSelectorColumn/>
      <DataColumn name="dataNum">
        <Property name="property">dataNum</Property>
      </DataColumn>
      <DataColumn name="stockTime">
        <Property name="property">stockTime</Property>
      </DataColumn>
      <DataColumn>
        <Property name="property">warehouseCode</Property>
        <Property name="name">warehouseCode</Property>
      </DataColumn>
      <DataColumn name="customerId">
        <Property name="property">customerId</Property>
      </DataColumn>
      <DataColumn name="temperatureTypeCode">
        <Property name="property">temperatureTypeCode</Property>
      </DataColumn>
      <DataColumn name="palletNum">
        <Property name="property">palletNum</Property>
      </DataColumn>
      <DataColumn>
        <ClientEvent name="onRenderCell">var adjustPalletNum=arg.data.get(&quot;adjustPalletNum&quot;);&#xD;
var palletNum=arg.data.get(&quot;palletNum&quot;);&#xD;
if(isNullOrEmpty(adjustPalletNum)){&#xD;
	arg.dom.style.background = &quot;#fcc5c5&quot;;&#xD;
	arg.dom.style.color = &quot;blue&quot;;&#xD;
}&#xD;
if(!isNullOrEmpty(adjustPalletNum) &amp;&amp; !isNullOrEmpty(palletNum)){&#xD;
	if(adjustPalletNum!=palletNum){&#xD;
		arg.dom.style.background = &quot;#fcc5c5&quot;;&#xD;
		arg.dom.style.color = &quot;blue&quot;;&#xD;
	}&#xD;
}&#xD;
&#xD;
arg.processDefault = true;</ClientEvent>
        <Property name="name">adjustPalletNum</Property>
        <Property name="property">adjustPalletNum</Property>
        <Editor/>
      </DataColumn>
      <DataColumn>
        <Property name="name">creator</Property>
        <Property name="property">creator</Property>
        <Editor/>
      </DataColumn>
      <DataColumn name="createTime">
        <Property name="property">createTime</Property>
      </DataColumn>
      <DataColumn>
        <Property name="property">isCalculated</Property>
        <Property name="name">isCalculated</Property>
      </DataColumn>
      <DataColumn>
        <Property name="property">feesNo</Property>
        <Property name="name">feesNo</Property>
      </DataColumn>
      <DataColumn name="extattr1">
        <Property name="property">extattr1</Property>
      </DataColumn>
    </DataGrid>
    <Dialog id="editDialogProductPalletStorage">
      <ClientEvent name="onClose">view.id(&quot;dataSetProductPalletStorage&quot;).getData(&quot;#&quot;).cancel();&#xD;
</ClientEvent>
      <Property name="width">600</Property>
      <Property name="height">260</Property>
      <Property name="caption">新增或编辑</Property>
      <Buttons>
        <Button id="btnSaveProductPalletStorage">
          <ClientEvent name="onClick">var entity = view.get(&quot;#editFormProductPalletStorage&quot;).get(&quot;entity&quot;);&#xD;
var palletNum = entity.get(&quot;palletNum&quot;);&#xD;
//dorado.MessageBox.alert(palletNum);&#xD;
if(undefined==palletNum || palletNum==''){&#xD;
	dorado.MessageBox.alert(&quot;请填写托数!&quot;);&#xD;
	return;&#xD;
}&#xD;
&#xD;
if (isNaN(palletNum)) {&#xD;
	dorado.MessageBox.alert(&quot;托数必须为数字!&quot;);&#xD;
	return;&#xD;
}&#xD;
if (palletNum &lt;=0) {&#xD;
	dorado.MessageBox.alert(&quot;托数必须大于0!&quot;);&#xD;
	return;&#xD;
}&#xD;
&#xD;
view.id(&quot;updateProductPalletStorageAction&quot;).execute(&#xD;
	function(result){&#xD;
		view.id(&quot;editDialogProductPalletStorage&quot;).hide();&#xD;
		dorado.MessageBox.alert(result);&#xD;
		&#xD;
		var tmpDataSet=view.get(&quot;#dataSetProductPalletStorage&quot;);&#xD;
		var tmpFormCondition=view.get(&quot;#queryFormProductPalletStorage&quot;);&#xD;
		tmpFormCondition.get(&quot;entity&quot;).set(&quot;delFlag&quot;,&quot;0&quot;);&#xD;
		tmpDataSet.set(&quot;parameter&quot;, tmpFormCondition.get(&quot;entity&quot;)).flushAsync();&#xD;
	}&#xD;
);</ClientEvent>
          <Property name="icon">url(>skin>common/icons.gif) -140px -20px</Property>
          <Property name="caption">保存</Property>
        </Button>
        <Button id="btnCancel">
          <ClientEvent name="onClick">dorado.MessageBox.confirm(&quot;是否确定取消此操作？&quot;,&#xD;
	function(){&#xD;
		view.id(&quot;dataSetProductPalletStorage&quot;).getData(&quot;#&quot;).cancel();&#xD;
		view.id(&quot;editDialogProductPalletStorage&quot;).hide();&#xD;
	}&#xD;
);</ClientEvent>
          <Property name="icon">url(>skin>common/icons.gif) -40px -0px</Property>
          <Property name="caption">取消</Property>
        </Button>
      </Buttons>
      <Children>
        <Container>
          <AutoForm id="editFormProductPalletStorage">
            <Property name="cols">*,*</Property>
            <Property name="dataSet">dataSetProductPalletStorage</Property>
            <Property name="dataType">dataTypeProductPalletStorage</Property>
            <Property name="labelSeparator">:</Property>
            <Property name="labelWidth">120</Property>
            <AutoFormElement>
              <Property name="name">dataNum</Property>
              <Property name="property">dataNum</Property>
              <Property name="readOnly">true</Property>
              <Property name="editable">false</Property>
              <Editor/>
            </AutoFormElement>
            <AutoFormElement>
              <Property name="name">feesNo</Property>
              <Property name="property">feesNo</Property>
              <Property name="readOnly">true</Property>
              <Property name="editable">false</Property>
              <Editor/>
            </AutoFormElement>
            <AutoFormElement>
              <Property name="name">isCalculated</Property>
              <Property name="property">isCalculated</Property>
              <Property name="editable">false</Property>
              <Property name="readOnly">true</Property>
              <Editor/>
            </AutoFormElement>
            <AutoFormElement>
              <Property name="name">warehouseCode</Property>
              <Property name="property">warehouseCode</Property>
              <Editor/>
            </AutoFormElement>
            <AutoFormElement>
              <Property name="name">customerId</Property>
              <Property name="property">customerId</Property>
              <Property name="trigger">editDialogTriggerCustomer</Property>
              <Editor/>
            </AutoFormElement>
            <AutoFormElement>
              <Property name="name">temperatureTypeCode</Property>
              <Property name="property">temperatureTypeCode</Property>
              <Editor/>
            </AutoFormElement>
            <AutoFormElement>
              <Property name="name">palletNum</Property>
              <Property name="property">palletNum</Property>
              <Editor/>
            </AutoFormElement>
            <AutoFormElement>
              <Property name="name">stockTime</Property>
              <Property name="property">stockTime</Property>
              <Editor/>
            </AutoFormElement>
          </AutoForm>
        </Container>
      </Children>
      <Tools/>
    </Dialog>
    <UpdateAction id="updateProductPalletStorageAction">
      <Property name="successMessage">数据保存成功！</Property>
      <Property name="executingMessage">正在保存中...</Property>
      <Property name="dataResolver">productPalletStorageController#saveAll</Property>
      <UpdateItem>
        <Property name="dataSet">dataSetProductPalletStorage</Property>
        <Property name="dataPath">!DIRTY_TREE</Property>
      </UpdateItem>
    </UpdateAction>
    <UpdateAction id="removeProductPalletStorageAction">
      <Property name="successMessage">删除数据成功!</Property>
      <Property name="dataResolver">productPalletStorageController#delete</Property>
      <UpdateItem>
        <Property name="dataSet">dataSetProductPalletStorage</Property>
        <Property name="dataPath">[#current]</Property>
      </UpdateItem>
    </UpdateAction>
    <DownloadAction id="downloadTemplateAction">
      <Property name="fileProvider">productPalletStorageController#accquireTemplate</Property>
      <Property name="target">workspace</Property>
    </DownloadAction>
    <Dialog id="ImportPalletDialog">
      <ClientEvent name="onShow">$(&quot;#d_progressLabel&quot;).hide();&#xD;
$(&quot;#d_importProgressBar&quot;).hide();&#xD;
$(&quot;#d_fileName input&quot;).val(&quot;&quot;);&#xD;
view.get(&quot;#progressLabel&quot;).set(&quot;text&quot;, &quot;请不要关闭当前页面，系统正在处理数据，请耐心等待...&quot;);&#xD;
view.get(&quot;#importProgressBar&quot;).set(&quot;value&quot;, 0);&#xD;
view.get(&quot;#importCloseBtn&quot;).set(&quot;disabled&quot;,false);&#xD;
view.get(&quot;#importBtn2&quot;).set(&quot;disabled&quot;,false);</ClientEvent>
      <ClientEvent name="onClose">$(&quot;#d_progressLabel&quot;).hide();&#xD;
$(&quot;#d_importProgressBar&quot;).hide();&#xD;
$(&quot;#d_fileName input&quot;).val(&quot;&quot;);&#xD;
view.get(&quot;#importBtn2&quot;).set(&quot;disabled&quot;,false);&#xD;
</ClientEvent>
      <Property name="caption">导入</Property>
      <Property name="closeable">false</Property>
      <Property name="height">180</Property>
      <Property name="width">460</Property>
      <Buttons>
        <Button id="importCloseBtn">
          <ClientEvent name="onClick">view.get(&quot;#ImportPalletDialog&quot;).hide();</ClientEvent>
          <Property name="caption">关闭</Property>
        </Button>
      </Buttons>
      <Children>
        <AutoForm>
          <AutoFormElement id="fileName">
            <Property name="label">文件名称</Property>
            <Property name="hintWidth">0</Property>
            <Property name="name">fileName</Property>
            <Property name="property">fileName</Property>
            <Property name="readOnly">true</Property>
            <Property name="showHint">false</Property>
            <Property name="width">300</Property>
            <Editor/>
          </AutoFormElement>
          <AutoFormElement id="importBtn" layoutConstraint="align:right">
            <Property name="hintWidth">0</Property>
            <Property name="name">importBtn</Property>
            <Property name="property">importBtn</Property>
            <Property name="showHint">false</Property>
            <Property name="showLabel">false</Property>
            <Property name="width">80</Property>
            <Editor>
              <Button id="importBtn2">
                <Property name="action">uploadProductPalletStorageAction</Property>
                <Property name="caption">导入</Property>
              </Button>
            </Editor>
          </AutoFormElement>
        </AutoForm>
        <Label id="progressLabel">
          <Property name="text">请不要关闭当前页面，系统正在处理数据，请耐心等待...</Property>
          <Property name="width">350</Property>
        </Label>
        <ProgressBar id="importProgressBar"/>
        <AjaxAction id="getProgress">
          <Property name="modal">false</Property>
          <Property name="service">bizPackStorageController#getProgress</Property>
        </AjaxAction>
        <AjaxAction id="setProgress">
          <Property name="modal">false</Property>
          <Property name="service">bizPackStorageController#setProgress</Property>
        </AjaxAction>
        <UploadAction id="uploadProductPalletStorageAction">
          <ClientEvent name="onFileUploaded">view.get(&quot;#importBtn2&quot;).set(&quot;disabled&quot;,false);&#xD;
view.get(&quot;#importCloseBtn&quot;).set(&quot;disabled&quot;,false);&#xD;
//导入Excel之后，在这里拿到上传成功之后的返回值 例如java方法里返回Map值这里获得数据后会映射成json&#xD;
//注意这里&#xD;
var data= arg.returnValue;&#xD;
if(data.error!=null){&#xD;
	 var dataSet=view.get(&quot;#dsErrorMessageVo&quot;);&#xD;
     dataSet.setData(data.error);&#xD;
	 view.get(&quot;#progressLabel&quot;).set(&quot;text&quot;,&quot;导入失败！&quot;);&#xD;
     view.get(&quot;#errorProductMsgDialog&quot;).show();&#xD;
	 return;&#xD;
}&#xD;
if(data.succ!=null){&#xD;
	view.get(&quot;#progressLabel&quot;).set(&quot;text&quot;,&quot;导入成功！&quot;);&#xD;
	dorado.MessageBox.alert(&quot;导入成功!&quot;,function(){&#xD;
		view.get(&quot;#ImportPalletDialog&quot;).hide();&#xD;
		var condition = view.get(&quot;#dataSetCondition.data&quot;).current;&#xD;
		with (view.get(&quot;#dataSetProductPalletStorage&quot;)){&#xD;
			set(&quot;parameter&quot;, condition);&#xD;
			flushAsync();&#xD;
		}&#xD;
	});&#xD;
}&#xD;
&#xD;
</ClientEvent>
          <ClientEvent name="onFilesAdded">$(&quot;#d_progressLabel&quot;).show();&#xD;
$(&quot;#d_importProgressBar&quot;).show();&#xD;
view.get(&quot;#progressLabel&quot;).set(&quot;text&quot;, &quot;请不要关闭当前页面，系统正在处理数据，请耐心等待...&quot;);&#xD;
view.get(&quot;#importProgressBar&quot;).set(&quot;value&quot;, 0);&#xD;
var action = view.get(&quot;#getProgress&quot;);&#xD;
var setAction = view.get(&quot;#setProgress&quot;);&#xD;
var oldVal = 0;&#xD;
var getProgress = function() {&#xD;
	action.execute(function (res) {&#xD;
		&#xD;
		if (oldVal != res) {&#xD;
			for (oldVal; oldVal &lt;= res; oldVal++) {&#xD;
				view.get(&quot;#importProgressBar&quot;).set(&quot;value&quot;, res/10);&#xD;
			}&#xD;
		}&#xD;
		oldVal = res;&#xD;
		if (res == 999) {&#xD;
			clearInterval(progressJob);&#xD;
			//设置为 0&#xD;
			setAction.execute(function (res) {  });&#xD;
			view.get(&quot;#importCloseBtn&quot;).set(&quot;disabled&quot;,false);&#xD;
			view.get(&quot;#progressLabel&quot;).set(&quot;text&quot;,&quot;导入失败！&quot;);&#xD;
		}&#xD;
		if (res == 1000) {&#xD;
			clearInterval(progressJob);&#xD;
			//设置为 0&#xD;
			setAction.execute(function (res) {  });&#xD;
			view.get(&quot;#importCloseBtn&quot;).set(&quot;disabled&quot;,false);&#xD;
			view.get(&quot;#progressLabel&quot;).set(&quot;text&quot;,&quot;导入完成！&quot;);&#xD;
		}&#xD;
	});&#xD;
};&#xD;
&#xD;
var progressJob = setInterval(getProgress, 500);</ClientEvent>
          <ClientEvent name="beforeFileUpload">var fname = arg.file.name;&#xD;
$(&quot;#d_fileName input&quot;).val(fname);&#xD;
view.get(&quot;#importBtn2&quot;).set(&quot;disabled&quot;,true);&#xD;
view.get(&quot;#importCloseBtn&quot;).set(&quot;disabled&quot;,true);</ClientEvent>
          <Property name="fileResolver">productPalletStorageController#importProductPalletTemplate</Property>
          <Property name="caption">导入Excel</Property>
          <Property name="maxFileSize">5MB</Property>
          <Filters>
            <Filter>
              <Property name="extensions">xls,xlsx,XLS,XLSX</Property>
              <Property name="title">Excel文件</Property>
            </Filter>
          </Filters>
        </UploadAction>
      </Children>
      <Tools/>
    </Dialog>
    <Dialog id="updatePalletBillDialog">
      <ClientEvent name="onShow">$(&quot;#d_uprogressLabel&quot;).hide();&#xD;
$(&quot;#d_uimportProgressBar&quot;).hide();&#xD;
$(&quot;#d_ufileName input&quot;).val(&quot;&quot;);&#xD;
view.get(&quot;#uprogressLabel&quot;).set(&quot;text&quot;, &quot;请不要关闭当前页面，系统正在处理数据，请耐心等待...&quot;);&#xD;
view.get(&quot;#uimportProgressBar&quot;).set(&quot;value&quot;, 0);&#xD;
//view.get(&quot;#updateCloseBtn&quot;).set(&quot;disabled&quot;,false);&#xD;
//view.get(&quot;#d_updateCloseBtn&quot;).set(&quot;disabled&quot;,false);</ClientEvent>
      <ClientEvent name="onClose">$(&quot;#d_uprogressLabel&quot;).hide();&#xD;
$(&quot;#d_uimportProgressBar&quot;).hide();&#xD;
$(&quot;#d_ufileName input&quot;).val(&quot;&quot;);&#xD;
view.get(&quot;#d_uimportBtn&quot;).set(&quot;disabled&quot;,false);&#xD;
</ClientEvent>
      <Property name="caption">批量更新</Property>
      <Property name="closeable">false</Property>
      <Property name="height">180</Property>
      <Property name="width">460</Property>
      <Buttons>
        <Button id="updateCloseBtn">
          <ClientEvent name="onClick">view.get(&quot;#updatePalletBillDialog&quot;).hide();</ClientEvent>
          <Property name="caption">关闭</Property>
        </Button>
      </Buttons>
      <Children>
        <AutoForm>
          <AutoFormElement id="ufileName">
            <Property name="label">文件名称</Property>
            <Property name="hintWidth">0</Property>
            <Property name="name">fileName</Property>
            <Property name="property">fileName</Property>
            <Property name="readOnly">true</Property>
            <Property name="showHint">false</Property>
            <Property name="width">300</Property>
            <Editor/>
          </AutoFormElement>
          <AutoFormElement id="uimportBtn" layoutConstraint="align:right">
            <Property name="hintWidth">0</Property>
            <Property name="name">importBtn</Property>
            <Property name="property">importBtn</Property>
            <Property name="showHint">false</Property>
            <Property name="showLabel">false</Property>
            <Property name="width">80</Property>
            <Editor>
              <Button id="uimportBtn2">
                <Property name="action">uploadProductPalletStorageUpdateAction</Property>
                <Property name="caption">导入</Property>
              </Button>
            </Editor>
          </AutoFormElement>
        </AutoForm>
        <Label id="uprogressLabel">
          <Property name="text">请不要关闭当前页面，系统正在处理数据，请耐心等待...</Property>
          <Property name="width">350</Property>
        </Label>
        <ProgressBar id="uimportProgressBar"/>
        <AjaxAction id="ugetProgress">
          <Property name="modal">false</Property>
          <Property name="service">trunkWaybillController#getProgress</Property>
        </AjaxAction>
        <AjaxAction id="usetProgress">
          <Property name="modal">false</Property>
          <Property name="service">trunkWaybillController#setProgress</Property>
        </AjaxAction>
        <UploadAction id="uploadProductPalletStorageUpdateAction">
          <ClientEvent name="onFileUploaded">//view.get(&quot;#d_uimportBtn&quot;).set(&quot;disabled&quot;,false);&#xD;
//view.get(&quot;#importCloseBtn&quot;).set(&quot;disabled&quot;,false);&#xD;
//导入Excel之后，在这里拿到上传成功之后的返回值 例如java方法里返回Map值这里获得数据后会映射成json&#xD;
//注意这里&#xD;
var data= arg.returnValue;&#xD;
if(data.error!=null){&#xD;
	 var dataSet=view.get(&quot;#dsErrorMessageVo&quot;);&#xD;
     dataSet.setData(data.error);&#xD;
	 view.get(&quot;#uprogressLabel&quot;).set(&quot;text&quot;,&quot;导入失败！&quot;);&#xD;
     view.get(&quot;#errorProductMsgDialog&quot;).show();&#xD;
	 return;&#xD;
}&#xD;
if(data.succ!=null){&#xD;
	view.get(&quot;#progressLabel&quot;).set(&quot;text&quot;,&quot;导入成功！&quot;);&#xD;
	dorado.MessageBox.alert(&quot;导入成功!&quot;,function(){&#xD;
		view.get(&quot;#updatePalletBillDialog&quot;).hide();&#xD;
		&#xD;
		with (view.get(&quot;#dataSetProductPalletStorage&quot;)){&#xD;
			flushAsync();&#xD;
		}&#xD;
	});&#xD;
}&#xD;
&#xD;
</ClientEvent>
          <ClientEvent name="onFilesAdded">$(&quot;#d_uprogressLabel&quot;).show();&#xD;
$(&quot;#d_uimportProgressBar&quot;).show();&#xD;
view.get(&quot;#progressLabel&quot;).set(&quot;text&quot;, &quot;请不要关闭当前页面，系统正在处理数据，请耐心等待...&quot;);&#xD;
view.get(&quot;#uimportProgressBar&quot;).set(&quot;value&quot;, 0);&#xD;
var action = view.get(&quot;#ugetProgress&quot;);&#xD;
var setAction = view.get(&quot;#usetProgress&quot;);&#xD;
var oldVal = 0;&#xD;
var getProgress = function() {&#xD;
	action.execute(function (res) {&#xD;
		&#xD;
		if (oldVal != res) {&#xD;
			for (oldVal; oldVal &lt;= res; oldVal++) {&#xD;
				view.get(&quot;#uimportProgressBar&quot;).set(&quot;value&quot;, res/10);&#xD;
			}&#xD;
		}&#xD;
		oldVal = res;&#xD;
		if (res == 999) {&#xD;
			clearInterval(progressJob);&#xD;
			//设置为 0&#xD;
			setAction.execute(function (res) {  });&#xD;
			view.get(&quot;#uimportCloseBtn&quot;).set(&quot;disabled&quot;,false);&#xD;
			view.get(&quot;#uprogressLabel&quot;).set(&quot;text&quot;,&quot;导入失败！&quot;);&#xD;
		}&#xD;
		if (res == 1000) {&#xD;
			clearInterval(progressJob);&#xD;
			//设置为 0&#xD;
			setAction.execute(function (res) {  });&#xD;
			view.get(&quot;#uimportCloseBtn&quot;).set(&quot;disabled&quot;,false);&#xD;
			view.get(&quot;#uprogressLabel&quot;).set(&quot;text&quot;,&quot;导入完成！&quot;);	&#xD;
		}&#xD;
	});&#xD;
};&#xD;
&#xD;
var progressJob = setInterval(getProgress, 500);</ClientEvent>
          <ClientEvent name="beforeFileUpload">var fname = arg.file.name;&#xD;
&#xD;
$(&quot;#d_ufileName input&quot;).val(fname);&#xD;
//view.get(&quot;#d_uimportBtn&quot;).set(&quot;disabled&quot;,true);&#xD;
//view.get(&quot;#d_updateCloseBtn&quot;).set(&quot;disabled&quot;,true);&#xD;
</ClientEvent>
          <Property name="fileResolver">productPalletStorageController#updateProductPalletTemplate</Property>
          <Property name="caption">导入Excel</Property>
          <Property name="maxFileSize">5MB</Property>
          <Filters>
            <Filter>
              <Property name="extensions">xls,xlsx,XLS,XLSX</Property>
              <Property name="title">Excel文件</Property>
            </Filter>
          </Filters>
        </UploadAction>
      </Children>
      <Tools/>
    </Dialog>
    <Dialog id="errorProductMsgDialog">
      <Property name="caption">消息提示!</Property>
      <Property name="height">300</Property>
      <Property name="width">540</Property>
      <Buttons/>
      <Children>
        <DataGrid id="errorProductMsgGrid">
          <Property name="dataSet">dsErrorMessageVo</Property>
          <DataColumn name="lineNo">
            <Property name="property">lineNo</Property>
            <Property name="width">30</Property>
          </DataColumn>
          <DataColumn name="msg">
            <Property name="property">msg</Property>
          </DataColumn>
        </DataGrid>
      </Children>
      <Tools/>
    </Dialog>
    <Trigger id="triggerCus">
      <ClientEvent name="onExecute">view.get(&quot;#panelCustomer&quot;).show();</ClientEvent>
    </Trigger>
    <FloatPanel id="panelCustomer">
      <ClientEvent name="onHide">var data = this.get(&quot;#viewSelectCustomer.userData&quot;);&#xD;
if (data != null) {&#xD;
	view.get(&quot;#queryFormProductPalletStorage.entity&quot;).set(&quot;customerId&quot;,data.get(&quot;customerid&quot;));&#xD;
}</ClientEvent>
      <Property name="caption">商家选择</Property>
      <Property name="center">true</Property>
      <Property name="closeable">true</Property>
      <Property name="contentOverflow">scroll</Property>
      <Property name="height">450</Property>
      <Property name="modal">true</Property>
      <Property name="width">800</Property>
      <Buttons/>
      <Children>
        <SubViewHolder id="viewSelectCustomer">
          <Property name="subView">com.jiuyescm.bms.base.customer.view.CustomerLookup</Property>
        </SubViewHolder>
      </Children>
      <Tools/>
    </FloatPanel>
    <Trigger id="editDialogTriggerCustomer">
      <ClientEvent name="onExecute">view.get(&quot;#editDialogPanelCustomer&quot;).show();</ClientEvent>
    </Trigger>
    <FloatPanel id="editDialogPanelCustomer">
      <ClientEvent name="onHide">var data = this.get(&quot;#viewDialogSelectCustomer.userData&quot;);&#xD;
if (data != null) {&#xD;
	view.get(&quot;#editFormProductPalletStorage.entity&quot;).set(&quot;customerId&quot;,data.get(&quot;customerid&quot;));&#xD;
}</ClientEvent>
      <Property name="caption">商家选择</Property>
      <Property name="center">true</Property>
      <Property name="closeable">true</Property>
      <Property name="contentOverflow">scroll</Property>
      <Property name="height">450</Property>
      <Property name="modal">true</Property>
      <Property name="width">800</Property>
      <Buttons/>
      <Children>
        <SubViewHolder id="viewDialogSelectCustomer">
          <Property name="subView">com.jiuyescm.bms.base.customer.view.CustomerLookup</Property>
        </SubViewHolder>
      </Children>
      <Tools/>
    </FloatPanel>
    <FloatPanel id="panelCustomer3">
      <ClientEvent name="onHide">var data = this.get(&quot;#viewSelectCustomer2.userData&quot;);&#xD;
if (data != null) {&#xD;
	var entity = this.get(&quot;#dsCondition&quot;).getData(&quot;#&quot;);&#xD;
    entity.set({&#xD;
        customerid: data.get(&quot;customerid&quot;),&#xD;
    });&#xD;
}&#xD;
</ClientEvent>
      <Property name="width">800</Property>
      <Property name="height">450</Property>
      <Property name="contentOverflow">scroll</Property>
      <Property name="closeable">true</Property>
      <Property name="center">true</Property>
      <Property name="caption">分组统计</Property>
      <Property name="modal">true</Property>
      <Buttons/>
      <Children>
        <Container>
          <ToolBar>
            <DataPilot>
              <Property name="dataSet">dsGroupList</Property>
              <Property name="itemCodes">pages,pageSize</Property>
            </DataPilot>
          </ToolBar>
          <DataGrid>
            <Property name="dataSet">dsGroupList</Property>
            <DataColumn>
              <Property name="name">warehouseCode</Property>
              <Property name="property">warehouseCode</Property>
              <Property name="editable">false</Property>
              <Property name="readOnly">true</Property>
              <Editor/>
            </DataColumn>
            <DataColumn>
              <Property name="name">customerId</Property>
              <Property name="width">230</Property>
              <Property name="property">customerId</Property>
              <Property name="editable">false</Property>
              <Property name="readOnly">true</Property>
              <Editor/>
            </DataColumn>
            <DataColumn>
              <Property name="name">temperatureTypeCode</Property>
              <Property name="property">temperatureTypeCode</Property>
              <Property name="editable">false</Property>
              <Property name="readOnly">true</Property>
              <Editor/>
            </DataColumn>
            <DataColumn>
              <Property name="name">num</Property>
              <Property name="property">num</Property>
              <Property name="editable">false</Property>
              <Property name="readOnly">true</Property>
              <Editor/>
            </DataColumn>
          </DataGrid>
        </Container>
      </Children>
      <Tools/>
    </FloatPanel>
    <AjaxAction id="validRetryAction">
      <Property name="service">productPalletStorageController#validRetry</Property>
    </AjaxAction>
    <AjaxAction id="RetryAction">
      <Property name="service">productPalletStorageController#reCalculate</Property>
    </AjaxAction>
    <UpdateAction id="updateActionDelete">
      <ClientEvent name="onGetUpdateData">//获得选中提交的数据&#xD;
arg.data=view.get(&quot;#dataGridProductPalletStorage&quot;).get(&quot;selection&quot;);</ClientEvent>
      <Property name="dataResolver">productPalletStorageController#deleteBatch</Property>
      <UpdateItem>
        <Property name="dataSet">dataSetProductPalletStorage</Property>
      </UpdateItem>
    </UpdateAction>
    <UpdateAction id="bizDownAction">
      <Property name="dataResolver">proPalletStorageExportController#asynExport</Property>
    </UpdateAction>
    <Dialog id="fileExportTaskDialog">
      <Property name="closeable">false</Property>
      <Property name="caption">账单下载</Property>
      <Property name="height">500</Property>
      <Property name="width">900</Property>
      <Buttons>
        <Button id="btnFileExportTaskClose">
          <ClientEvent name="onClick">var condition = view.get(&quot;#dsFileExportTaskCondition.data&quot;).current;&#xD;
condition.set(&quot;taskName&quot;,null);&#xD;
view.get(&quot;#fileExportTaskDialog&quot;).hide();</ClientEvent>
          <Property name="icon">url(>skin>common/icons.gif) -40px -0px</Property>
          <Property name="caption">关闭</Property>
        </Button>
      </Buttons>
      <Children>
        <Container>
          <ToolBar>
            <DataPilot>
              <Property name="dataSet">dsFileExportTaskList</Property>
              <Property name="itemCodes">pages,pageSize</Property>
            </DataPilot>
            <Separator/>
            <ToolBarButton>
              <ClientEvent name="onClick">var condition=view.get(&quot;#dsFileExportTaskCondition.data&quot;).current;&#xD;
var taskName = &quot;&quot;;&#xD;
if(null != condition){&#xD;
	taskName = condition.get(&quot;taskName&quot;);&#xD;
}&#xD;
with (view.get(&quot;#dsFileExportTaskList&quot;)){&#xD;
	//定义查询条件json结构&#xD;
	var queryJson={&#xD;
		taskType:'pro_pallet',&#xD;
		taskName:taskName&#xD;
	}; &#xD;
	set(&quot;parameter&quot;, queryJson);&#xD;
	flushAsync();&#xD;
}</ClientEvent>
              <Property name="caption">查询</Property>
              <Property name="icon">url(>skin>common/icons.gif) -20px -40px</Property>
            </ToolBarButton>
            <Separator/>
            <ToolBarButton>
              <ClientEvent name="onClick">var data=view.get(&quot;#dsFileExportTaskList.data&quot;).current;&#xD;
if(!data){&#xD;
	dorado.MessageBox.alert(&quot;请选择要删除的记录!&quot;);&#xD;
	return;&#xD;
}&#xD;
var taskId = data.get(&quot;taskId&quot;);&#xD;
if(isNullOrEmpty(taskId)){&#xD;
	dorado.MessageBox.alert(&quot;请选择要删除的记录&quot;);&#xD;
	return;&#xD;
}&#xD;
&#xD;
var action=view.get(&quot;#delExportTaskAction&quot;);&#xD;
dorado.MessageBox.confirm(&quot;确定删除[&quot;+data.get(&quot;taskName&quot;)+&quot;]的记录?&quot;,function(){&#xD;
	action.set(&quot;parameter&quot;,data).execute(function(){&#xD;
		dorado.MessageBox.alert(&quot;删除成功!&quot;);&#xD;
		with (view.get(&quot;#dsFileExportTaskList&quot;)){&#xD;
			//定义查询条件json结构&#xD;
			var queryJson={&#xD;
				taskType:'pro_pallet'&#xD;
			};&#xD;
			set(&quot;parameter&quot;, queryJson);&#xD;
			flushAsync();&#xD;
		}&#xD;
	});&#xD;
})</ClientEvent>
              <Property name="caption">删除</Property>
              <Property name="icon">url(>skin>common/icons.gif) -80px -120px</Property>
            </ToolBarButton>
          </ToolBar>
          <AutoForm id="exportTaskForm">
            <Property name="cols">*,*,*</Property>
            <Property name="dataSet">dsFileExportTaskCondition</Property>
            <Property name="dataType">dtFileExportTaskCondition</Property>
            <Property name="labelWidth">100</Property>
            <AutoFormElement>
              <Property name="name">taskName</Property>
              <Property name="property">taskName</Property>
              <Property name="editable">true</Property>
              <Editor/>
            </AutoFormElement>
          </AutoForm>
          <DataGrid id="fileExportTaskDetailGrid">
            <Property name="dataSet">dsFileExportTaskList</Property>
            <Property name="readOnly">true</Property>
            <Property name="selectionMode">singleRow</Property>
            <RowNumColumn/>
            <DataColumn>
              <Property name="property">taskId</Property>
              <Property name="width">150</Property>
              <Property name="name">taskId</Property>
              <Property name="visible">false</Property>
            </DataColumn>
            <DataColumn>
              <Property name="property">taskName</Property>
              <Property name="width">150</Property>
              <Property name="name">taskName</Property>
            </DataColumn>
            <DataColumn>
              <Property name="property">taskState</Property>
              <Property name="width">80</Property>
              <Property name="name">taskState</Property>
            </DataColumn>
            <DataColumn>
              <Property name="property">startTime</Property>
              <Property name="name">startTime</Property>
              <Property name="width">120</Property>
            </DataColumn>
            <DataColumn>
              <Property name="property">endTime</Property>
              <Property name="name">endTime</Property>
              <Property name="width">120</Property>
            </DataColumn>
            <DataColumn>
              <Property name="property">filePath</Property>
              <Property name="name">filePath</Property>
              <Property name="visible">false</Property>
            </DataColumn>
            <DataColumn>
              <Property name="property">progress</Property>
              <Property name="name">progress</Property>
              <Property name="displayFormat">##%</Property>
            </DataColumn>
            <DataColumn name="creator">
              <Property name="property">creator</Property>
            </DataColumn>
            <DataColumn name="createTime">
              <Property name="property">createTime</Property>
              <Property name="width">120</Property>
            </DataColumn>
            <DataColumn>
              <ClientEvent name="onRenderCell">jQuery(arg.dom).empty();&#xD;
var taskState=arg.data.get(&quot;taskState&quot;);&#xD;
if(taskState==2){&#xD;
	jQuery(arg.dom).xCreate([&#xD;
		{&#xD;
		    tagName: &quot;A&quot;,&#xD;
		    href: &quot;#&quot;,&#xD;
		    content:&quot;下载&quot;,&#xD;
			style:&quot;margin-left:10px;&quot;,&#xD;
		    onclick: function() {&#xD;
			  var action=view.get(&quot;#fileExportDownAction&quot;);&#xD;
			  action.set(&quot;parameter&quot;,arg.data).execute();&#xD;
	    	}&#xD;
		}&#xD;
	]);&#xD;
}</ClientEvent>
              <Property name="align">center</Property>
              <Property name="caption">操作</Property>
              <Property name="name">operator</Property>
              <Editor/>
            </DataColumn>
          </DataGrid>
        </Container>
      </Children>
      <Tools/>
    </Dialog>
    <DownloadAction id="fileExportDownAction">
      <Property name="fileProvider">fileExportTaskController#exportDetail</Property>
      <Property name="caption">导出</Property>
    </DownloadAction>
    <UpdateAction id="delExportTaskAction">
      <Property name="dataResolver">fileExportTaskController#delExportTask</Property>
      <UpdateItem>
        <Property name="dataSet">dsFileExportTaskList</Property>
        <Property name="dataPath">[#current]</Property>
      </UpdateItem>
    </UpdateAction>
  </View>
</ViewConfig>
