<?xml version="1.0" encoding="UTF-8"?>
<ViewConfig>
  <Arguments/>
  <Context/>
  <Model>
    <DataType name="dtBmsFileAsynTaskVo" meta="child:dataTypeBmsGroup">
      <Property name="creationType">com.jiuyescm.bms.asyn.vo.BmsFileAsynTaskVo</Property>
      <PropertyDef name="id">
        <Property name="dataType">Integer</Property>
      </PropertyDef>
      <PropertyDef name="taskId">
        <Property></Property>
        <Property name="label">任务编号</Property>
      </PropertyDef>
      <PropertyDef name="taskName">
        <Property></Property>
        <Property name="label">任务名称</Property>
      </PropertyDef>
      <PropertyDef name="taskRate">
        <Property name="label">任务进度</Property>
      </PropertyDef>
      <PropertyDef name="taskStatus">
        <Property></Property>
        <Property name="label">任务状态</Property>
        <Property name="mapping">
          <Property name="mapValues">${dorado.getDataProvider(&quot;bmsFileAsynTaskController#getFileAsynTaskStatusMap&quot;).getResult()}</Property>
        </Property>
      </PropertyDef>
      <PropertyDef name="bizType">
        <Property></Property>
        <Property name="label">业务类型</Property>
      </PropertyDef>
      <PropertyDef name="taskType">
        <Property></Property>
        <Property name="label">任务类型</Property>
        <Property name="mapping">
          <Property name="mapValues">${dorado.getDataProvider(&quot;bmsFileAsynTaskController#getFileAsynTaskTypeNewMap&quot;).getResult()}</Property>
        </Property>
      </PropertyDef>
      <PropertyDef name="fileRows">
        <Property name="dataType">Integer</Property>
        <Property name="label">文件行数</Property>
      </PropertyDef>
      <PropertyDef name="creator">
        <Property></Property>
        <Property name="label">操作人员</Property>
      </PropertyDef>
      <PropertyDef name="createTime">
        <Property name="label">创建时间</Property>
        <Property name="dataType">DateTime</Property>
      </PropertyDef>
      <PropertyDef name="finishTime">
        <Property name="label">完成时间</Property>
        <Property name="dataType">DateTime</Property>
      </PropertyDef>
      <PropertyDef name="originFileName">
        <Property></Property>
        <Property name="label">原文件名称</Property>
      </PropertyDef>
      <PropertyDef name="originFilePath">
        <Property></Property>
        <Property name="label">原文件路径</Property>
      </PropertyDef>
      <PropertyDef name="resultFileName">
        <Property></Property>
        <Property name="label">文件名称</Property>
      </PropertyDef>
      <PropertyDef name="resultFilePath">
        <Property></Property>
        <Property name="label">结果文件路径</Property>
      </PropertyDef>
      <PropertyDef name="creatorId">
        <Property></Property>
      </PropertyDef>
      <PropertyDef name="remark">
        <Property></Property>
        <Property name="label">备注</Property>
      </PropertyDef>
    </DataType>
    <DataType name="dtCondition">
      <PropertyDef name="taskName">
        <Property></Property>
        <Property name="label">任务名称</Property>
      </PropertyDef>
      <PropertyDef name="taskType">
        <Property></Property>
        <Property name="label">任务类型</Property>
        <Property name="mapping">
          <Property name="mapValues">${dorado.getDataProvider(&quot;bmsFileAsynTaskController#getFileAsynTaskTypeNewMap&quot;).getResult()}</Property>
        </Property>
      </PropertyDef>
      <PropertyDef name="taskStatus">
        <Property></Property>
        <Property name="label">任务状态</Property>
        <Property name="mapping">
          <Property name="mapValues">${dorado.getDataProvider(&quot;bmsFileAsynTaskController#getFileAsynTaskStatusMap&quot;).getResult()}</Property>
        </Property>
      </PropertyDef>
      <PropertyDef name="beginTime">
        <Property name="label">开始时间</Property>
        <Property name="dataType">DateTime</Property>
      </PropertyDef>
      <PropertyDef name="endTime">
        <Property name="label">结束时间</Property>
        <Property name="dataType">DateTime</Property>
      </PropertyDef>
      <PropertyDef name="bizType">
        <Property></Property>
        <Property name="label">任务类型</Property>
      </PropertyDef>
      <PropertyDef name="creator">
        <Property></Property>
        <Property name="label">操作人员</Property>
      </PropertyDef>
      <PropertyDef name="resultFileName">
        <Property></Property>
        <Property name="label">文件名称</Property>
      </PropertyDef>
    </DataType>
  </Model>
  <View>
    <ClientEvent name="onReady">var taskType= GetQueryString(&quot;taskType&quot;);&#xD;
if(taskType != null &amp;&amp; taskType !='' &amp;&amp; taskType != &quot;undefined&quot;){&#xD;
	view.get(&quot;#dsCondition.data&quot;).current.set(&quot;taskType&quot;,taskType);&#xD;
	view.id(&quot;taskType&quot;).set(&quot;readOnly&quot;,true);&#xD;
}&#xD;
&#xD;
&#xD;
function GetQueryString(name){&#xD;
	 var reg = new RegExp(&quot;(^|&amp;)&quot; + name + &quot;=([^&amp;]*)(&amp;|$)&quot;); &#xD;
     var r = window.location.search.substr(1).match(reg);&#xD;
     if(r!=null)return  unescape(r[2]); return null;&#xD;
	}</ClientEvent>
    <DataSet id="dsBmsFileAsynTaskVo">
      <Property name="dataType">[dtBmsFileAsynTaskVo]</Property>
      <Property name="dataProvider">bmsFileAsynTaskController#query</Property>
      <Property name="pageSize">20</Property>
      <Property name="readOnly">false</Property>
      <Property name="loadMode">manual</Property>
    </DataSet>
    <DataSet id="dsCondition">
      <ClientEvent name="onCreate">view.get(&quot;#dsCondition&quot;).getData().insert();&#xD;
		  </ClientEvent>
      <Property name="dataType">[dtCondition]</Property>
    </DataSet>
    <ToolBar>
      <DataPilot>
        <Property name="dataSet">dsBmsFileAsynTaskVo</Property>
        <Property name="itemCodes">pages,pageSize</Property>
      </DataPilot>
      <Separator/>
      <ToolBarButton id="btnQuery">
        <ClientEvent name="onClick">var condition = view.get(&quot;#dsCondition&quot;).getData().current;&#xD;
/*&#xD;
var tmpDataSet=view.get(&quot;#dsBmsFileAsynTaskVo&quot;);&#xD;
var dtCondition=view.get(&quot;#formCondition&quot;).get(&quot;entity&quot;);&#xD;
var taskType = dtCondition.get(&quot;taskType&quot;);&#xD;
if(isNullOrEmpty(taskType)){&#xD;
	dorado.MessageBox.alert(&quot;请选择任务类型！&quot;);&#xD;
	return;&#xD;
}*/&#xD;
&#xD;
condition.set(&quot;bizType&quot;, &quot;IMPORT&quot;);// 导入&#xD;
with (view.get(&quot;#dsBmsFileAsynTaskVo&quot;)){&#xD;
	set(&quot;parameter&quot;, condition);&#xD;
	flush();&#xD;
}</ClientEvent>
        <Property name="caption">查询</Property>
        <Property name="icon">url(>skin>common/icons.gif) -20px -40px</Property>
      </ToolBarButton>
      <ToolBarButton id="btnDownload">
        <ClientEvent name="onClick">var data = view.get(&quot;#dsBmsFileAsynTaskVo.data&quot;).current;&#xD;
if(isNullOrEmpty(data)){&#xD;
	dorado.MessageBox.alert(&quot;请选择需要下载的记录!&quot;);&#xD;
	return;&#xD;
}else{&#xD;
	var resultFilePath = data.get(&quot;resultFilePath&quot;);&#xD;
	if(isNullOrEmpty(resultFilePath)){&#xD;
		dorado.MessageBox.alert(&quot;下载文件路径为空!&quot;);&#xD;
		return;&#xD;
	}else{&#xD;
		var action=view.get(&quot;#downloadAction&quot;);&#xD;
		action.execute();&#xD;
	}&#xD;
}&#xD;
</ClientEvent>
        <Property name="caption">下载</Property>
        <Property name="icon">url(>skin>common/icons.gif) -160px -120px</Property>
        <Property name="visible">false</Property>
      </ToolBarButton>
      <Separator/>
      <ToolBarButton id="btnAgainImport">
        <ClientEvent name="onClick">var data = view.get(&quot;#dsBmsFileAsynTaskVo.data&quot;).current;&#xD;
if(isNullOrEmpty(data)){&#xD;
	dorado.MessageBox.alert(&quot;请选择需要再次导入的记录!&quot;);&#xD;
	return;&#xD;
}else{&#xD;
	var taskId = data.get(&quot;taskId&quot;);&#xD;
	var taskStatus = data.get(&quot;taskStatus&quot;);&#xD;
	var remark = data.get(&quot;remark&quot;);&#xD;
	&#xD;
	if(isNullOrEmpty(taskId)){&#xD;
		dorado.MessageBox.alert(&quot;任务编号不能为空!&quot;);&#xD;
		return;&#xD;
	}&#xD;
	/**if(!isNullOrEmpty(remark)){&#xD;
		dorado.MessageBox.alert(&quot;当前任务不允许再次导入，请根据备注信息提示修改原文件后重新导入!&quot;);&#xD;
		return;&#xD;
	}*/&#xD;
	if(isNullOrEmpty(taskStatus) || &quot;SUCCESS&quot; == taskStatus){&#xD;
		dorado.MessageBox.alert(&quot;当前状态不允许再次导入!&quot;);&#xD;
		return;&#xD;
	}&#xD;
	&#xD;
	var importAction = view.get(&quot;#importAction&quot;);&#xD;
	//定义查询条件json结构&#xD;
	var queryJson={&#xD;
		taskId:taskId&#xD;
	};&#xD;
	importAction.set(&quot;parameter&quot;, queryJson);&#xD;
	importAction.execute(function(result){&#xD;
		dorado.MessageBox.alert(result);&#xD;
		//获取条件查询数据&#xD;
		var condition =view.get(&quot;#dsCondition.data&quot;).current;&#xD;
		condition.set(&quot;bizType&quot;, &quot;IMPORT&quot;);// 导入&#xD;
		with (view.get(&quot;#dsBmsFileAsynTaskVo&quot;)){&#xD;
			set(&quot;parameter&quot;, condition);&#xD;
			flushAsync();&#xD;
		}&#xD;
	})&#xD;
}</ClientEvent>
        <Property name="caption">再次导入</Property>
        <Property name="icon">url(>skin>common/icons.gif) -240px -240px</Property>
        <Property name="visible">true</Property>
      </ToolBarButton>
    </ToolBar>
    <AutoForm id="formCondition">
      <ClientEvent name="onReady">var date = new Date();&#xD;
var seperator1 = &quot;-&quot;;&#xD;
var seperator2 = &quot;:&quot;;&#xD;
var month = date.getMonth() + 1;&#xD;
var strDate = date.getDate();&#xD;
if (month >= 1 &amp;&amp; month &lt;= 9) {&#xD;
    month = &quot;0&quot; + month;&#xD;
}&#xD;
if (strDate >= 0 &amp;&amp; strDate &lt;= 9) {&#xD;
    strDate = &quot;0&quot; + strDate;&#xD;
}&#xD;
&#xD;
var lw = new Date(date - 1000*60*60*24*7);&#xD;
var lwmonth = lw.getMonth() + 1;&#xD;
var lwstrDate = lw.getDate();&#xD;
if (lwmonth >= 1 &amp;&amp; lwmonth &lt;= 9) {&#xD;
    lwmonth = &quot;0&quot; + lwmonth;&#xD;
}&#xD;
if (lwstrDate >= 0 &amp;&amp; lwstrDate &lt;= 9) {&#xD;
    lwstrDate = &quot;0&quot; + lwstrDate;&#xD;
}&#xD;
var startdate = lw.getFullYear() + seperator1 + lwmonth + seperator1 + lwstrDate&#xD;
	+ &quot; &quot; + &quot;00&quot; + seperator2 + &quot;00&quot; + seperator2 + &quot;00&quot;;&#xD;
&#xD;
var enddate = date.getFullYear() + seperator1 + month + seperator1 + strDate&#xD;
	+ &quot; &quot; + &quot;23&quot; + seperator2 + &quot;59&quot; + seperator2 + &quot;59&quot;;&#xD;
	&#xD;
view.get(&quot;#dsCondition&quot;).getData().current.set(&quot;beginTime&quot;,startdate);&#xD;
view.get(&quot;#dsCondition&quot;).getData().current.set(&quot;endTime&quot;,enddate);</ClientEvent>
      <Property name="dataType">dtCondition</Property>
      <Property name="createPrivateDataSet">false</Property>
      <Property name="cols">*,*,*</Property>
      <Property name="labelWidth">80</Property>
      <Property name="dataSet">dsCondition</Property>
      <AutoFormElement id="taskType">
        <Property name="name">taskType</Property>
        <Property name="property">taskType</Property>
        <Property name="readOnly">false</Property>
        <Editor/>
      </AutoFormElement>
      <AutoFormElement>
        <Property name="name">beginTime</Property>
        <Property name="property">beginTime</Property>
        <Editor/>
      </AutoFormElement>
      <AutoFormElement>
        <Property name="name">endTime</Property>
        <Property name="property">endTime</Property>
        <Editor/>
      </AutoFormElement>
      <AutoFormElement>
        <Property name="name">taskStatus</Property>
        <Property name="property">taskStatus</Property>
        <Editor/>
      </AutoFormElement>
      <AutoFormElement>
        <Property name="name">resultFileName</Property>
        <Property name="property">resultFileName</Property>
        <Editor/>
      </AutoFormElement>
      <AutoFormElement>
        <Property name="name">creator</Property>
        <Property name="property">creator</Property>
        <Editor/>
      </AutoFormElement>
    </AutoForm>
    <Container>
      <DataGrid id="gridBmsFileAsynLookup">
        <Property name="dataSet">dsBmsFileAsynTaskVo</Property>
        <Property name="readOnly">true</Property>
        <RowNumColumn/>
        <DataColumn>
          <Property name="property">taskId</Property>
          <Property name="name">taskId</Property>
          <Property name="visible">true</Property>
          <Property name="width">100</Property>
        </DataColumn>
        <DataColumn>
          <Property name="property">taskName</Property>
          <Property name="width">150</Property>
          <Property name="name">taskName</Property>
          <Property name="visible">false</Property>
        </DataColumn>
        <DataColumn>
          <Property name="property">taskType</Property>
          <Property name="width">120</Property>
          <Property name="name">taskType</Property>
        </DataColumn>
        <DataColumn>
          <Property name="property">fileRows</Property>
          <Property name="width">80</Property>
          <Property name="name">fileRows</Property>
        </DataColumn>
        <DataColumn>
          <Property name="property">resultFilePath</Property>
          <Property name="width">230</Property>
          <Property name="name">resultFilePath</Property>
          <Property name="visible">false</Property>
        </DataColumn>
        <DataColumn>
          <ClientEvent name="onRenderCell">jQuery(arg.dom).empty();&#xD;
jQuery(arg.dom).xCreate({&#xD;
	tagName: &quot;A&quot;,&#xD;
	href: &quot;#20%&quot;,&#xD;
	content:arg.data.get(&quot;resultFileName&quot;),&#xD;
	onclick:function(){&#xD;
		var resultFilePath = arg.data.get(&quot;resultFilePath&quot;);&#xD;
		if(isNullOrEmpty(resultFilePath)){&#xD;
			dorado.MessageBox.alert(&quot;下载文件不存在!&quot;);&#xD;
			return;&#xD;
		}else{&#xD;
			var action=view.get(&quot;#downloadAction&quot;);&#xD;
			action.execute();&#xD;
		}&#xD;
	}&#xD;
});&#xD;
</ClientEvent>
          <Property name="property">resultFileName</Property>
          <Property name="width">200</Property>
          <Property name="name">resultFileName</Property>
        </DataColumn>
        <DataColumn>
          <ClientEvent name="onRenderCell">var taskRate=arg.data.get(&quot;taskRate&quot;);&#xD;
arg.dom.innerHTML= taskRate + &quot;%&quot;;</ClientEvent>
          <Property name="property">taskRate</Property>
          <Property name="width">80</Property>
          <Property name="name">taskRate</Property>
        </DataColumn>
        <DataColumn>
          <ClientEvent name="onRenderCell">var taskStatus=arg.data.get(&quot;taskStatus&quot;);&#xD;
if(!isNullOrEmpty(taskStatus) &amp;&amp; 'SUCCESS' == taskStatus){&#xD;
	arg.dom.style.color = &quot;green&quot;;&#xD;
}else{&#xD;
	arg.dom.style.color = &quot;red&quot;;&#xD;
}&#xD;
arg.processDefault = true;</ClientEvent>
          <Property name="property">taskStatus</Property>
          <Property name="width">80</Property>
          <Property name="name">taskStatus</Property>
        </DataColumn>
        <DataColumn>
          <Property name="property">creator</Property>
          <Property name="width">80</Property>
          <Property name="name">creator</Property>
        </DataColumn>
        <DataColumn>
          <Property name="property">createTime</Property>
          <Property name="width">120</Property>
          <Property name="name">createTime</Property>
        </DataColumn>
        <DataColumn>
          <Property name="property">finishTime</Property>
          <Property name="width">120</Property>
          <Property name="name">finishTime</Property>
        </DataColumn>
        <DataColumn>
          <Property name="property">remark</Property>
          <Property name="width">210</Property>
          <Property name="name">remark</Property>
        </DataColumn>
      </DataGrid>
    </Container>
    <DownloadAction id="downloadAction">
      <ClientEvent name="beforeExecute">var data = view.get(&quot;#dsBmsFileAsynTaskVo.data&quot;).current;&#xD;
if(data){&#xD;
	var parameter={&quot;url&quot;:data.get(&quot;resultFilePath&quot;),&quot;excelName&quot;:data.get(&quot;resultFileName&quot;)};&#xD;
	self.set(&quot;parameter&quot;,parameter);&#xD;
}</ClientEvent>
      <Property name="fileProvider">bmsFileAsynTaskController#downloadExcel</Property>
    </DownloadAction>
    <UpdateAction id="importAction">
      <Property name="dataResolver">bmsFileAsynTaskController#reImport</Property>
    </UpdateAction>
  </View>
</ViewConfig>
