<?xml version="1.0" encoding="UTF-8"?>
<ViewConfig>
  <Arguments/>
  <Context/>
  <Model>
    <DataType name="dataTypeTrunkWayBill">
      <Property name="creationType">com.jiuyescm.bms.biz.transport.entity.BizGanxianWayBillEntity</Property>
      <PropertyDef name="transportTypeCode">
        <ClientEvent name="onSet">//var formEntity = view.get(&quot;#calTransportFeeForm.entity&quot;);&#xD;
//formEntity.set(&quot;transportTemplateCode&quot;,&quot;&quot;);&#xD;
</ClientEvent>
        <Property></Property>
        <Property name="label">运输类型</Property>
        <Property name="mapping">
          <Property name="mapValues">${dorado.getDataProvider(&quot;selFromTablePR#getTransportProductTypeList&quot;).getResult()}</Property>
        </Property>
      </PropertyDef>
      <PropertyDef name="bizTypeCode">
        <Property></Property>
        <Property name="label">业务类型</Property>
        <Property name="defaultValue">TRANSPORT</Property>
      </PropertyDef>
      <PropertyDef name="warehouseId">
        <Property></Property>
        <Property name="label">仓库</Property>
      </PropertyDef>
      <PropertyDef name="sendProvinceId">
        <Property></Property>
        <Property name="label">始发省份</Property>
      </PropertyDef>
      <PropertyDef name="sendCityId">
        <Property></Property>
        <Property name="label">始发城市</Property>
      </PropertyDef>
      <PropertyDef name="sendDistrictId">
        <Property></Property>
        <Property name="label">始发区域</Property>
      </PropertyDef>
      <PropertyDef name="receiverProvinceId">
        <Property></Property>
        <Property name="label">目的省份</Property>
      </PropertyDef>
      <PropertyDef name="receiverCityId">
        <Property></Property>
        <Property name="label">目的城市</Property>
      </PropertyDef>
      <PropertyDef name="receiverDistrictId">
        <Property></Property>
        <Property name="label">目的区域</Property>
      </PropertyDef>
      <PropertyDef name="totalWeight">
        <Property name="dataType">Double</Property>
        <Property name="label">按重量</Property>
      </PropertyDef>
      <PropertyDef name="contractCode">
        <Property></Property>
        <Property name="label">合同</Property>
      </PropertyDef>
      <PropertyDef name="transportTemplateCode">
        <Property></Property>
        <Property name="label">运输报价模板</Property>
        <Property name="visible">false</Property>
      </PropertyDef>
      <PropertyDef name="carModel">
        <Property></Property>
        <Property name="label">按车型</Property>
        <Property name="mapping">
          <Property name="mapValues">${dorado.getDataProvider(&quot;selFromTablePR#getCarModelList&quot;).getResult()}</Property>
        </Property>
      </PropertyDef>
      <PropertyDef name="sendProvinceName">
        <Property></Property>
        <Property name="label">始发省份</Property>
        <Property name="visible">false</Property>
      </PropertyDef>
      <PropertyDef name="sendCityName">
        <Property></Property>
        <Property name="label">始发城市</Property>
        <Property name="visible">false</Property>
      </PropertyDef>
      <PropertyDef name="sendDistrictName">
        <Property></Property>
        <Property name="label">始发地区</Property>
        <Property name="visible">false</Property>
      </PropertyDef>
      <PropertyDef name="receiverProvinceName">
        <Property></Property>
        <Property name="label">目的省份</Property>
        <Property name="visible">false</Property>
      </PropertyDef>
      <PropertyDef name="receiverCityName">
        <Property></Property>
        <Property name="label">目的城市</Property>
        <Property name="visible">false</Property>
      </PropertyDef>
      <PropertyDef name="receiverDistrictName">
        <Property></Property>
        <Property name="label">目的地区</Property>
        <Property name="visible">false</Property>
      </PropertyDef>
      <PropertyDef name="calResult">
        <Property></Property>
        <Property name="label">计算结果</Property>
      </PropertyDef>
      <PropertyDef name="calMethod">
        <Property></Property>
        <Property name="defaultValue">1</Property>
      </PropertyDef>
      <PropertyDef name="transportType">
        <Property></Property>
        <Property name="mapping">
          <Property name="mapValues">${dorado.getDataProvider(&quot;selFromTablePR#getTransportProductTypeList&quot;).getResult()}</Property>
        </Property>
        <Property name="label">运输类型</Property>
      </PropertyDef>
      <PropertyDef name="temperatureTypeCode">
        <Property></Property>
        <Property name="label">温度类型</Property>
        <Property name="mapping">
          <Property name="mapValues">${dorado.getDataProvider(&quot;selFromTablePR#getTemperatureTypeList&quot;).getResult()}</Property>
        </Property>
      </PropertyDef>
      <PropertyDef name="isLight">
        <Property></Property>
      </PropertyDef>
      <PropertyDef name="totalVolume">
        <Property name="dataType">Double</Property>
        <Property name="label">按体积</Property>
      </PropertyDef>
      <PropertyDef name="adjustWeight">
        <Property name="dataType">Double</Property>
        <Property name="defaultValue">0</Property>
      </PropertyDef>
      <PropertyDef name="validProvince"/>
    </DataType>
  </Model>
  <View>
    <DataSet id="dataSetTrunkWayBill">
      <ClientEvent name="onCreate">//如果不加这句话,Form查询框就是灰色的.&#xD;
view.get(&quot;#dataSetTrunkWayBill&quot;).getData().insert();</ClientEvent>
      <Property name="dataType">[dataTypeTrunkWayBill]</Property>
      <Property name="pageSize">20</Property>
      <Property name="loadMode">lazy</Property>
      <Property name="parameter"></Property>
    </DataSet>
    <DataSet id="dsAllProvinces">
      <Property name="dataType">[dtRegionVoEntity]</Property>
      <Property name="dataProvider">omsAddressController#getAllProvinces</Property>
    </DataSet>
    <DataSet id="dsCities">
      <Property name="dataType">[dtPubAddressEntity]</Property>
      <Property name="dataProvider">omsAddressController#getCitiesByProvinceCode</Property>
    </DataSet>
    <DataSet id="dsDistricts">
      <Property name="dataType">[dtRegionVoEntity]</Property>
      <Property name="dataProvider">omsAddressController#getDistrictsByCityCode</Property>
    </DataSet>
    <DataSetDropDown id="ddropDownQueryProvince">
      <ClientEvent name="onValueSelect">var data = this.get(&quot;#dataSetTrunkWayBill&quot;).getData(&quot;#&quot;);&#xD;
data.set({&#xD;
	sendProvinceId:arg.selectedValue.get(&quot;province&quot;)&#xD;
});&#xD;
&#xD;
data.set(&quot;sendCityId&quot;,&quot;&quot;);&#xD;
data.set(&quot;sendCityName&quot;,&quot;&quot;);&#xD;
&#xD;
data.set(&quot;sendDistrictId&quot;,&quot;&quot;);&#xD;
data.set(&quot;sendDistrictName&quot;,&quot;&quot;);&#xD;
&#xD;
arg.processDefault = false;&#xD;
</ClientEvent>
      <Property name="autoOpen">true</Property>
      <Property name="dataSet">dsAllProvinces</Property>
      <Property name="displayProperty">province</Property>
      <Property name="editable">false</Property>
      <Property name="useEmptyItem">true</Property>
    </DataSetDropDown>
    <DataSetDropDown id="ddropDownQueryCity">
      <ClientEvent name="onValueSelect">var data = this.get(&quot;#dataSetTrunkWayBill&quot;).getData(&quot;#&quot;);&#xD;
data.set({&#xD;
	sendCityId: arg.selectedValue.get(&quot;city&quot;)&#xD;
});&#xD;
&#xD;
data.set(&quot;sendDistrictId&quot;,&quot;&quot;);&#xD;
data.set(&quot;sendDistrictName&quot;,&quot;&quot;);&#xD;
&#xD;
arg.processDefault = false;</ClientEvent>
      <ClientEvent name="beforeExecute">var data = this.get(&quot;#dataSetTrunkWayBill&quot;).getData(&quot;#&quot;);&#xD;
var sendProvinceName = data.get(&quot;sendProvinceId&quot;);&#xD;
if(sendProvinceName){&#xD;
	var parameter={&#xD;
		province:sendProvinceName&#xD;
	};&#xD;
	view.get(&quot;#dsCities&quot;).set(&quot;parameter&quot;,parameter).flushAsync();&#xD;
}else{&#xD;
	this.get(&quot;#dsCities&quot;).clear();&#xD;
}</ClientEvent>
      <Property name="autoOpen">true</Property>
      <Property name="dataSet">dsCities</Property>
      <Property name="displayProperty">city</Property>
      <Property name="editable">false</Property>
      <Property name="useEmptyItem">true</Property>
      <Property name="assignmentMap">provincecode=provincecode</Property>
    </DataSetDropDown>
    <DataSetDropDown id="ddropDownQueryDistrict">
      <ClientEvent name="beforeExecute">var data = this.get(&quot;#dataSetTrunkWayBill&quot;).getData(&quot;#&quot;);&#xD;
var sendProvinceName = data.get(&quot;sendProvinceId&quot;);&#xD;
var sendCityName = data.get(&quot;sendCityId&quot;);&#xD;
if(sendProvinceName &amp;&amp; sendCityName){&#xD;
	var parameter={&#xD;
		province:sendProvinceName,city:sendCityName&#xD;
	};&#xD;
	view.get(&quot;#dsDistricts&quot;).set(&quot;parameter&quot;,parameter).flushAsync();&#xD;
}else{&#xD;
	this.get(&quot;#dsDistricts&quot;).clear();&#xD;
}&#xD;
</ClientEvent>
      <ClientEvent name="onValueSelect">var data = this.get(&quot;#dataSetTrunkWayBill&quot;).getData(&quot;#&quot;);&#xD;
data.set({&#xD;
	sendDistrictId:arg.selectedValue.get(&quot;district&quot;)&#xD;
});&#xD;
arg.processDefault = false;&#xD;
</ClientEvent>
      <Property name="assignmentMap">provincecode=provincecode,citycode=citycode</Property>
      <Property name="autoOpen">true</Property>
      <Property name="dataSet">dsDistricts</Property>
      <Property name="displayProperty">district</Property>
      <Property name="editable">false</Property>
      <Property name="useEmptyItem">true</Property>
    </DataSetDropDown>
    <DataSetDropDown id="ddropDownQueryToProvince">
      <ClientEvent name="onValueSelect">var data = this.get(&quot;#dataSetTrunkWayBill&quot;).getData(&quot;#&quot;);&#xD;
data.set({&#xD;
	receiverProvinceId:arg.selectedValue.get(&quot;province&quot;)&#xD;
});&#xD;
&#xD;
data.set(&quot;receiverCityId&quot;,&quot;&quot;);&#xD;
data.set(&quot;receiverCityName&quot;,&quot;&quot;);&#xD;
&#xD;
data.set(&quot;receiverDistrictId&quot;,&quot;&quot;);&#xD;
data.set(&quot;receiverDistrictName&quot;,&quot;&quot;);&#xD;
&#xD;
arg.processDefault = false;</ClientEvent>
      <Property name="autoOpen">true</Property>
      <Property name="dataSet">dsAllProvinces</Property>
      <Property name="displayProperty">province</Property>
      <Property name="editable">false</Property>
      <Property name="useEmptyItem">true</Property>
    </DataSetDropDown>
    <DataSetDropDown id="ddropDownQueryToCity">
      <ClientEvent name="onValueSelect">var data = this.get(&quot;#dataSetTrunkWayBill&quot;).getData(&quot;#&quot;);&#xD;
data.set({&#xD;
	receiverCityId: arg.selectedValue.get(&quot;city&quot;)&#xD;
});&#xD;
&#xD;
data.set(&quot;receiverDistrictId&quot;,&quot;&quot;);&#xD;
data.set(&quot;receiverDistrictName&quot;,&quot;&quot;);&#xD;
&#xD;
arg.processDefault = false;</ClientEvent>
      <ClientEvent name="beforeExecute">var data = this.get(&quot;#dataSetTrunkWayBill&quot;).getData(&quot;#&quot;);&#xD;
var receiverProvinceName = data.get(&quot;receiverProvinceId&quot;);&#xD;
if(receiverProvinceName){&#xD;
	var parameter={&#xD;
		province:receiverProvinceName&#xD;
	};&#xD;
	view.get(&quot;#dsCities&quot;).set(&quot;parameter&quot;,parameter).flushAsync();&#xD;
}else{&#xD;
	this.get(&quot;#dsCities&quot;).clear();&#xD;
}</ClientEvent>
      <Property name="autoOpen">true</Property>
      <Property name="dataSet">dsCities</Property>
      <Property name="displayProperty">city</Property>
      <Property name="editable">false</Property>
      <Property name="useEmptyItem">true</Property>
      <Property name="assignmentMap">provincecode=provincecode</Property>
    </DataSetDropDown>
    <DataSetDropDown id="ddropDownQueryToDistrict">
      <ClientEvent name="beforeExecute">var data = this.get(&quot;#dataSetTrunkWayBill&quot;).getData(&quot;#&quot;);&#xD;
var receiverProvinceName = data.get(&quot;receiverProvinceId&quot;);&#xD;
var receiverCityName = data.get(&quot;receiverCityId&quot;);&#xD;
if(receiverProvinceName &amp;&amp; receiverCityName){&#xD;
	var parameter={&#xD;
		province:receiverProvinceName,city:receiverCityName&#xD;
	};&#xD;
	view.get(&quot;#dsDistricts&quot;).set(&quot;parameter&quot;,parameter).flushAsync();&#xD;
}else{&#xD;
	this.get(&quot;#dsDistricts&quot;).clear();&#xD;
}</ClientEvent>
      <ClientEvent name="onValueSelect">var data = this.get(&quot;#dataSetTrunkWayBill&quot;).getData(&quot;#&quot;);&#xD;
data.set({&#xD;
	receiverDistrictId:arg.selectedValue.get(&quot;district&quot;)&#xD;
});&#xD;
arg.processDefault = false;&#xD;
</ClientEvent>
      <Property name="autoOpen">true</Property>
      <Property name="dataSet">dsDistricts</Property>
      <Property name="displayProperty">district</Property>
      <Property name="editable">false</Property>
      <Property name="useEmptyItem">true</Property>
      <Property name="assignmentMap">provincecode=provincecode,citycode=citycode</Property>
    </DataSetDropDown>
    <Trigger id="triggerContract">
      <ClientEvent name="onExecute">view.get(&quot;#panelContract&quot;).show();</ClientEvent>
    </Trigger>
    <FloatPanel id="panelContract">
      <ClientEvent name="onHide">//找到触发弹出层的事件源控件；&#xD;
//对控件赋值&#xD;
var data = this.get(&quot;#viewSelectCustomer.userData&quot;);&#xD;
if (data != null) {&#xD;
	view.get(&quot;#calTransportFeeForm.entity&quot;).set(&quot;contractCode&quot;,data.get(&quot;contractCode&quot;));&#xD;
}</ClientEvent>
      <Property name="width">800</Property>
      <Property name="height">500</Property>
      <Property name="center">true</Property>
      <Property name="caption">合同选择</Property>
      <Buttons/>
      <Children>
        <SubViewHolder id="viewSelectCustomer">
          <Property name="subView">com.jiuyescm.bms.quotation.contract.view.CustomerContractLookup</Property>
        </SubViewHolder>
      </Children>
      <Tools/>
    </FloatPanel>
    <FieldSet layoutConstraint="center padding:25">
      <Property name="width">1100</Property>
      <Property name="height">300</Property>
      <Property name="collapseable">false</Property>
      <Property name="caption">运输费用试算</Property>
      <Property name="collapsed">false</Property>
      <Property name="buttonAlign">center</Property>
      <Buttons>
        <Button id="calTransportFee" layoutConstraint="align:left">
          <ClientEvent name="onClick">view.get(&quot;#calculateAction&quot;).execute(&#xD;
	function(result){&#xD;
		if(result.code == &quot;SUCCESS&quot;){&#xD;
			dorado.MessageBox.alert(&quot;试算结果为：&quot;+result.data);&#xD;
		}else{&#xD;
			dorado.MessageBox.alert(result);&#xD;
		}&#xD;
	}&#xD;
);</ClientEvent>
          <Property name="caption">运输费用计算</Property>
        </Button>
      </Buttons>
      <Children>
        <AutoForm id="calTransportFeeForm">
          <ClientEvent name="onReady">/*&#xD;
var en = view.get(&quot;#queryTransportTemplateForm.entity&quot;);&#xD;
en.set(&quot;bizTypeCode&quot;,&quot;TRANSPORT&quot;);&#xD;
en.set(&quot;subjectId&quot;,&quot;2001&quot;);&#xD;
*/</ClientEvent>
          <Property name="labelSeparator">:</Property>
          <Property name="cols">*,*,*,85,*,*,*</Property>
          <Property name="dataType">dataTypeTrunkWayBill</Property>
          <Property name="dataSet">dataSetTrunkWayBill</Property>
          <Property name="labelWidth">70</Property>
          <Label layoutConstraint="colSpan:7">
            <Property name="text">参数设置：</Property>
          </Label>
          <AutoFormElement layoutConstraint="colSpan:2">
            <Property name="name">temperatureTypeCode</Property>
            <Property name="property">temperatureTypeCode</Property>
            <Property name="labelWidth">70</Property>
            <Editor/>
          </AutoFormElement>
          <AutoFormElement layoutConstraint="colSpan:2">
            <ClientEvent name="onBlur">/*&#xD;
var data = this.get(&quot;#dataSetTrunkWayBill.data&quot;)&#xD;
var transportType = data.current.get(&quot;transportType&quot;);&#xD;
console.log(transportType);&#xD;
if(transportType == 'TCZC' || transportType == 'GXZC'){&#xD;
	view.get(&quot;#carModel&quot;).set(&quot;visible&quot;, true);&#xD;
	view.get(&quot;#totalWeight&quot;).set(&quot;visible&quot;, false);&#xD;
	view.get(&quot;#unitKG&quot;).set(&quot;visible&quot;, false);&#xD;
	view.get(&quot;#totalVolume&quot;).set(&quot;visible&quot;, false);&#xD;
	view.get(&quot;#unitM3&quot;).set(&quot;visible&quot;, false);&#xD;
	var data = this.get(&quot;#dataSetTrunkWayBill&quot;).getData(&quot;#&quot;);&#xD;
	data.set({&#xD;
		calMethod:1&#xD;
	});&#xD;
	&#xD;
}else if (transportType == 'TCLD' || transportType == 'GXLD'){&#xD;
	view.get(&quot;#carModel&quot;).set(&quot;visible&quot;, false);&#xD;
	view.get(&quot;#totalWeight&quot;).set(&quot;visible&quot;, true);&#xD;
	view.get(&quot;#unitKG&quot;).set(&quot;visible&quot;, true);&#xD;
	view.get(&quot;#totalVolume&quot;).set(&quot;visible&quot;, false);&#xD;
	view.get(&quot;#unitM3&quot;).set(&quot;visible&quot;, false);&#xD;
}&#xD;
*/</ClientEvent>
            <Property name="name">transportType</Property>
            <Property name="property">transportType</Property>
            <Property name="labelWidth">70</Property>
            <Editor/>
          </AutoFormElement>
          <AutoFormElement layoutConstraint="colSpan:3">
            <Property name="name">contractCode</Property>
            <Property name="property">contractCode</Property>
            <Property name="trigger">triggerContract</Property>
            <Property name="labelWidth">100</Property>
            <Editor/>
          </AutoFormElement>
          <AutoFormElement>
            <Property name="name">sendProvinceId</Property>
            <Property name="property">sendProvinceId</Property>
            <Property name="visible">true</Property>
            <Property name="trigger">ddropDownQueryProvince</Property>
            <Editor/>
          </AutoFormElement>
          <AutoFormElement>
            <Property name="name">sendProvinceName</Property>
            <Property name="property">sendProvinceName</Property>
            <Property name="visible">false</Property>
            <Property name="hideMode">display</Property>
            <Editor/>
          </AutoFormElement>
          <AutoFormElement>
            <Property name="name">sendCityId</Property>
            <Property name="property">sendCityId</Property>
            <Property name="labelWidth">70</Property>
            <Property name="visible">true</Property>
            <Property name="trigger">ddropDownQueryCity</Property>
            <Editor/>
          </AutoFormElement>
          <AutoFormElement>
            <Property name="name">sendCityName</Property>
            <Property name="property">sendCityName</Property>
            <Property name="visible">false</Property>
            <Property name="hideMode">display</Property>
            <Editor/>
          </AutoFormElement>
          <AutoFormElement>
            <Property name="name">sendDistrictId</Property>
            <Property name="property">sendDistrictId</Property>
            <Property name="labelWidth">70</Property>
            <Property name="visible">true</Property>
            <Property name="trigger">ddropDownQueryDistrict</Property>
            <Editor/>
          </AutoFormElement>
          <AutoFormElement>
            <Property name="name">sendDistrictName</Property>
            <Property name="property">sendDistrictName</Property>
            <Property name="hideMode">display</Property>
            <Property name="visible">false</Property>
            <Editor/>
          </AutoFormElement>
          <Label layoutConstraint="align:left">
            <Property name="text">➤➤➤➤</Property>
            <Property name="hideMode">visibility</Property>
          </Label>
          <AutoFormElement>
            <Property name="name">receiverProvinceId</Property>
            <Property name="property">receiverProvinceId</Property>
            <Property name="visible">true</Property>
            <Property name="trigger">ddropDownQueryToProvince</Property>
            <Editor/>
          </AutoFormElement>
          <AutoFormElement>
            <Property name="name">receiverProvinceName</Property>
            <Property name="property">receiverProvinceName</Property>
            <Property name="hideMode">display</Property>
            <Property name="visible">false</Property>
            <Editor/>
          </AutoFormElement>
          <AutoFormElement layoutConstraint="align:left">
            <Property name="name">receiverCityId</Property>
            <Property name="property">receiverCityId</Property>
            <Property name="labelWidth">70</Property>
            <Property name="visible">true</Property>
            <Property name="trigger">ddropDownQueryToCity</Property>
            <Editor/>
          </AutoFormElement>
          <AutoFormElement>
            <Property name="name">receiverCityName</Property>
            <Property name="property">receiverCityName</Property>
            <Property name="hideMode">display</Property>
            <Property name="visible">false</Property>
            <Editor/>
          </AutoFormElement>
          <AutoFormElement>
            <Property name="name">receiverDistrictId</Property>
            <Property name="property">receiverDistrictId</Property>
            <Property name="labelWidth">70</Property>
            <Property name="visible">true</Property>
            <Property name="trigger">ddropDownQueryToDistrict</Property>
            <Editor/>
          </AutoFormElement>
          <AutoFormElement>
            <Property name="name">receiverDistrictName</Property>
            <Property name="property">receiverDistrictName</Property>
            <Property name="visible">false</Property>
            <Property name="hideMode">display</Property>
            <Editor/>
          </AutoFormElement>
          <Label>
            <Property name="text">省份有效：</Property>
          </Label>
          <RadioGroup id="validProvince" layoutConstraint="colSpan:7">
            <ClientEvent name="onValueChange">var currentValue= self._value;&#xD;
if(currentValue == 1){&#xD;
	var data = this.get(&quot;#dataSetTrunkWayBill&quot;).getData(&quot;#&quot;);&#xD;
	data.set({&#xD;
		validProvince:1&#xD;
	});&#xD;
}else if (currentValue == 0){&#xD;
	var data = this.get(&quot;#dataSetTrunkWayBill&quot;).getData(&quot;#&quot;);&#xD;
	data.set({&#xD;
		validProvince:0&#xD;
	});&#xD;
}&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
</ClientEvent>
            <Property name="layout">grid</Property>
            <Property name="value">1</Property>
            <Property name="property">validProvince</Property>
            <RadioButton>
              <Property name="text">是</Property>
              <Property name="value">1</Property>
              <Property name="readOnly">false</Property>
            </RadioButton>
            <RadioButton>
              <Property name="text">否</Property>
              <Property name="value">0</Property>
            </RadioButton>
          </RadioGroup>
          <Label layoutConstraint="align:left;colSpan:5">
            <Property name="text">计费方式:</Property>
          </Label>
          <RadioGroup id="calMethod" layoutConstraint="colSpan:7">
            <ClientEvent name="onValueChange">var currentValue= self._value;&#xD;
if(currentValue == 1){&#xD;
	view.get(&quot;#carModel&quot;).set(&quot;visible&quot;, true);&#xD;
	view.get(&quot;#totalWeight&quot;).set(&quot;visible&quot;, false);&#xD;
	view.get(&quot;#unitKG&quot;).set(&quot;visible&quot;, false);&#xD;
	view.get(&quot;#totalVolume&quot;).set(&quot;visible&quot;, false);&#xD;
	view.get(&quot;#unitM3&quot;).set(&quot;visible&quot;, false);&#xD;
	var data = this.get(&quot;#dataSetTrunkWayBill&quot;).getData(&quot;#&quot;);&#xD;
	&#xD;
	data.set({&#xD;
		calMethod:1&#xD;
	});&#xD;
	&#xD;
}else if (currentValue == 2){&#xD;
	view.get(&quot;#carModel&quot;).set(&quot;visible&quot;, false);&#xD;
	view.get(&quot;#totalWeight&quot;).set(&quot;visible&quot;, true);&#xD;
	view.get(&quot;#unitKG&quot;).set(&quot;visible&quot;, true);&#xD;
	view.get(&quot;#totalVolume&quot;).set(&quot;visible&quot;, false);&#xD;
	view.get(&quot;#unitM3&quot;).set(&quot;visible&quot;, false);&#xD;
	var data = this.get(&quot;#dataSetTrunkWayBill&quot;).getData(&quot;#&quot;);&#xD;
	&#xD;
	data.set({&#xD;
		calMethod:2,&#xD;
		isLight:'N'&#xD;
	});&#xD;
	&#xD;
}else if (currentValue == 3){&#xD;
	view.get(&quot;#carModel&quot;).set(&quot;visible&quot;, false);&#xD;
	view.get(&quot;#totalWeight&quot;).set(&quot;visible&quot;, false);&#xD;
	view.get(&quot;#unitKG&quot;).set(&quot;visible&quot;, false);&#xD;
	view.get(&quot;#totalVolume&quot;).set(&quot;visible&quot;, true);&#xD;
	view.get(&quot;#unitM3&quot;).set(&quot;visible&quot;, true);&#xD;
	var data = this.get(&quot;#dataSetTrunkWayBill&quot;).getData(&quot;#&quot;);&#xD;
	data.set({&#xD;
		calMethod:3,&#xD;
		isLight:'Y'&#xD;
	});&#xD;
}&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
</ClientEvent>
            <Property name="layout">grid</Property>
            <Property name="value">1</Property>
            <Property name="property">calMethod</Property>
            <RadioButton>
              <Property name="text">按车型</Property>
              <Property name="value">1</Property>
              <Property name="readOnly">false</Property>
            </RadioButton>
            <RadioButton>
              <Property name="text">按重量</Property>
              <Property name="value">2</Property>
            </RadioButton>
            <RadioButton>
              <Property name="text">按体积(轻货)</Property>
              <Property name="value">3</Property>
            </RadioButton>
          </RadioGroup>
          <AutoFormElement id="carModel" layoutConstraint="align:left">
            <Property name="name">carModel</Property>
            <Property name="property">carModel</Property>
            <Property name="visible">true</Property>
            <Property name="hideMode">display</Property>
            <Editor/>
          </AutoFormElement>
          <AutoFormElement id="totalWeight" layoutConstraint="align:left">
            <Property name="name">totalWeight</Property>
            <Property name="property">totalWeight</Property>
            <Property name="labelWidth">70</Property>
            <Property name="visible">false</Property>
            <Property name="hideMode">display</Property>
            <Editor/>
          </AutoFormElement>
          <Label id="unitKG" layoutConstraint="align:left">
            <Property name="text">KG</Property>
            <Property name="visible">false</Property>
            <Property name="hideMode">display</Property>
          </Label>
          <AutoFormElement id="totalVolume" layoutConstraint="align:left">
            <Property name="name">totalVolume</Property>
            <Property name="property">totalVolume</Property>
            <Property name="labelWidth">70</Property>
            <Property name="visible">false</Property>
            <Property name="hideMode">display</Property>
            <Editor/>
          </AutoFormElement>
          <Label id="unitM3" layoutConstraint="align:left">
            <Property name="text">m³</Property>
            <Property name="visible">false</Property>
            <Property name="hideMode">display</Property>
          </Label>
          <AutoFormElement>
            <Property name="name">contractCode</Property>
            <Property name="property">contractCode</Property>
            <Property name="readOnly">false</Property>
            <Property name="trigger">triggerTransportTemplate</Property>
            <Property name="visible">false</Property>
            <Property name="labelWidth">70</Property>
            <Property name="hideMode">display</Property>
            <Editor/>
          </AutoFormElement>
          <AutoFormElement>
            <Property name="name">bizTypeCode</Property>
            <Property name="property">bizTypeCode</Property>
            <Property name="visible">false</Property>
            <Property name="labelWidth">70</Property>
            <Property name="hideMode">display</Property>
            <Editor/>
          </AutoFormElement>
          <AutoFormElement>
            <Property name="name">warehouseId</Property>
            <Property name="property">warehouseId</Property>
            <Property name="visible">false</Property>
            <Property name="labelWidth">70</Property>
            <Editor/>
          </AutoFormElement>
        </AutoForm>
      </Children>
    </FieldSet>
    <FieldSet layoutConstraint="center padding:25">
      <Property name="caption">计算结果</Property>
      <Property name="collapseable">false</Property>
      <Property name="width">1100</Property>
      <Property name="height">150</Property>
      <Buttons/>
      <Children>
        <AutoForm id="calResultForm">
          <Property name="dataSet">dataSetTrunkWayBill</Property>
          <Property name="dataType">dataTypeTrunkWayBill</Property>
          <Property name="labelSeparator">:</Property>
          <Property name="readOnly">true</Property>
          <AutoFormElement>
            <Property name="name">calResult</Property>
            <Property name="property">calResult</Property>
            <Editor/>
          </AutoFormElement>
        </AutoForm>
      </Children>
    </FieldSet>
    <UpdateAction id="calculateAction">
      <Property name="dataResolver">transportFeeTrialCalculator#tryCalculateTransportFee</Property>
      <UpdateItem>
        <Property name="dataPath">[#current]</Property>
        <Property name="dataSet">dataSetTrunkWayBill</Property>
      </UpdateItem>
    </UpdateAction>
  </View>
</ViewConfig>
